<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="req1000DAO">
	 <!--  in / out class define  -->
    <typeAlias alias="req1000VO"	type="kr.opensoftlab.oslops.req.req1000.req1000.vo.Req1000VO"/>
	<typeAlias alias="egovMap"	 	type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	
	<!-- Map Define -->
   	<resultMap id="resultMapSelectReq1000" class="req1000VO">
		<result property="rn"  				column="RN"/>
		<result property="prjId"				column="PRJ_ID"/>
		<result property="prjNm"				column="PRJ_NM"/>
		<result property="selPrjId"				column="PRJ_ID"/>
		<result property="reqId"				column="REQ_ID"/>
		<result property="reqOrd"				column="REQ_ORD"/>
		<result property="reqClsId"				column="REQ_CLS_ID"/>
		<result property="reqClsNm"				column="REQ_CLS_NM"/>
		<result property="reqNo"				column="REQ_NO"/>
		<result property="reqUsrId"				column="REQ_USR_ID"/>
		<result property="reqUsrNm"				column="REQ_USR_NM"/>
		<result property="reqDtm"				column="REQ_DTM"/>
		<result property="reqUsrDeptNm"			column="REQ_USR_DEPT_NM"/>
		<result property="reqUsrPositionNm"			column="REQ_USR_POSITION_NM"/>
		<result property="reqUsrDutyNm"			column="REQ_USR_DUTY_NM"/>
		<result property="reqUsrEmail"			column="REQ_USR_EMAIL"/>
		<result property="reqUsrNum"			column="REQ_USR_NUM"/>
		<result property="reqNm"				column="REQ_NM"/>
		<result property="reqDesc"				column="REQ_DESC"/>
		<result property="reqChargerId"			column="REQ_CHARGER_ID"/>
		<result property="reqCompleteRatio"		column="REQ_COMPLETE_RATIO"/>
		<result property="reqFp"				column="REQ_FP"/>
		<result property="reqExFp"				column="REQ_EX_FP"/>
		<result property="reqStDtm"				column="REQ_ST_DTM"/>
		<result property="reqEdDtm"				column="REQ_ED_DTM"/>
		<result property="reqStDuDtm"			column="REQ_ST_DU_DTM"/>
		<result property="reqEdDuDtm"			column="REQ_ED_DU_DTM"/>
		<result property="reqProType"			column="REQ_PRO_TYPE"/>
		<result property="reqProTypeNm"			column="REQ_PRO_TYPE_NM"/>
		<result property="reqNewType"			column="REQ_NEW_TYPE"/>
		<result property="reqNewTypeNm"			column="REQ_NEW_TYPE_NM"/>	
		<result property="reqAcceptTxt"			column="REQ_ACCEPT_TXT"/>
		<result property="sclCd"				column="SCL_CD"/>
		<result property="reqTypeCd"			column="REQ_TYPE_CD"/>
		<result property="piaCd"				column="PIA_CD"/>
		<result property="labInp"				column="LAB_INP"/>	
		<result property="atchFileId"			column="ATCH_FILE_ID"/>
		<result property="cbAtchFileId"			column="CB_ATCH_FILE_ID"/>
		<result property="milestoneId"			column="MILESTONE_ID"/>
		<result property="processId"			column="PROCESS_ID"/>
		<result property="processNm"			column="PROCESS_NM"/>
		<result property="flowId"				column="FLOW_ID"/>
		<result property="flowNm"				column="FLOW_NM"/>
		<result property="useCd"				column="USE_CD"/>
		<result property="regDtmDay"			column="REG_DTM_DAY"/>
		<result property="reqKey"				column="REQ_KEY"/>
    </resultMap>
	
	<!-- sql Define  -->
	<!-- 요구사항 목록 조회 -->
	<sql id="selectReq1000List">
		SELECT ROWNUM AS RN, T2.*
		FROM
		(
			SELECT 
					T1.PRJ_ID
				,	T1.USR_SEL_PRJ_ORD
				, 	T1.PRJ_NM
				,	T1.REQ_ID
				,	T1.REQ_ORD
				,	T1.REQ_ORD_NUMBER
				,	T1.REQ_CLS_ID
				,	COALESCE(SF_REQ4000_REQ_CLS_NM(T1.PRJ_ID, T1.REQ_CLS_ID, '1'), '') AS REQ_CLS_NM
				,	T1.REQ_NO
				,	T1.REQ_USR_ID
				,	COALESCE(T1.REQ_USR_NM, ( SELECT USR_NM FROM ADM2000 WHERE USR_ID = T1.REQ_USR_ID)) AS REQ_USR_NM
				,	TO_CHAR(T1.REQ_DTM, 'YYYY-MM-DD') AS REQ_DTM
				,	T1.REQ_USR_DEPT_NM
				,	T1.REQ_USR_POSITION_NM
		    	,	T1.REQ_USR_DUTY_NM
				,	T1.REQ_USR_EMAIL
				,	T1.REQ_USR_NUM
				,	T1.REQ_NM
				<isNotEmpty property="reqId">
	   				,	T1.REQ_DESC
	   			</isNotEmpty>
				<isEmpty property="reqId">
					<![CDATA[ 
	   				, sf_Replace_All (T1.REQ_DESC ,'</br>|<br>|<br/>|</BR>|<BR>|<BR/>' , '' ) AS REQ_DESC    
	   				]]>
	   			</isEmpty>
				,	T1.REQ_CHARGER_ID
				,	( SELECT USR_NM FROM ADM2000 WHERE USR_ID = T1.REQ_CHARGER_ID) AS REQ_CHARGER_NM
				,	T1.REQ_COMPLETE_RATIO
				,	T1.REQ_FP
		    	,	T1.REQ_EX_FP
				, 	T1.REQ_ST_DTM
	  		   	, 	T1.REQ_ED_DTM
				, 	T1.REQ_ST_DU_DTM
				, 	T1.REQ_ED_DU_DTM
				,	T1.REQ_PRO_TYPE
				,	( SELECT SUB_CD_NM FROM ADM4100 WHERE LIC_GRP_ID = #licGrpId# AND MST_CD = 'REQ00008' AND SUB_CD = T1.REQ_PRO_TYPE ) AS REQ_PRO_TYPE_NM	 
				,	T1.REQ_NEW_TYPE
				,   ( SELECT SUB_CD_NM FROM ADM4100 WHERE LIC_GRP_ID = #licGrpId# AND MST_CD = 'REQ00009' AND SUB_CD = T1.REQ_NEW_TYPE ) AS REQ_NEW_TYPE_NM
				,	T1.REQ_ACCEPT_TXT
				,	T1.SCL_CD
		    	,	T1.REQ_TYPE_CD
		    	,	T1.PIA_CD
		    	,   ( SELECT SUB_CD_NM FROM ADM4100 WHERE LIC_GRP_ID = #licGrpId# AND MST_CD = 'REQ00011' AND SUB_CD = T1.SCL_CD ) AS SCL_NM	    	
		    	,   ( SELECT SUB_CD_NM FROM ADM4100 WHERE LIC_GRP_ID = #licGrpId# AND MST_CD = 'REQ00012' AND SUB_CD = T1.REQ_TYPE_CD ) AS REQ_TYPE_NM	    	
		    	,   ( SELECT SUB_CD_NM FROM ADM4100 WHERE LIC_GRP_ID = #licGrpId# AND MST_CD = 'CMM00001' AND SUB_CD = T1.PIA_CD ) AS PIA_NM
		    	,	T1.LAB_INP
				,	T1.ATCH_FILE_ID
				,	T1.CB_ATCH_FILE_ID
				,	T1.MILESTONE_ID
				,	T1.PROCESS_ID
				,	'' AS PROCESS_NM
				,	T1.FLOW_ID
				,	'' AS FLOW_NM
				,	T1.USE_CD
				,	T1.REQ_KEY
			    ,	T1.REG_DTM
			    ,	T1.REG_DTM_DAY
			    ,	T1.REG_USR_ID
			    ,	T1.REG_USR_IP
			    ,	T1.MODIFY_DTM
			    ,	T1.MODIFY_USR_ID
			    ,	T1.MODIFY_USR_IP
			FROM
			(
				SELECT 
					B.PRJ_ID
					,   DECODE(B.PRJ_ID, #prjId#, '1' , '2') AS USR_SEL_PRJ_ORD
					, ( SELECT PRJ_NM FROM PRJ1000 WHERE PRJ_ID = B.PRJ_ID ) AS PRJ_NM
					,	B.REQ_ID
					,	B.REQ_ORD
					,	TO_NUMBER(IFNULL(SF_REPLACE_ALL(B.REQ_ORD ,'[^0-9]',''),0)) AS REQ_ORD_NUMBER
					,	B.REQ_CLS_ID
					,	B.REQ_NO
					,	B.REQ_USR_ID
					,	B.REQ_USR_NM
					,	TO_CHAR(B.REQ_DTM, 'YYYY-MM-DD') AS REQ_DTM
					,	B.REQ_USR_DEPT_NM
					,	B.REQ_USR_POSITION_NM
			    	,	B.REQ_USR_DUTY_NM
					,	B.REQ_USR_EMAIL
					,	B.REQ_USR_NUM
					,	B.REQ_NM
	    			,	B.REQ_DESC
					,	B.REQ_CHARGER_ID
					,	B.REQ_COMPLETE_RATIO
					,	B.REQ_FP
			    	,	B.REQ_EX_FP
					, 	IFNULL(TO_CHAR(B.REQ_ST_DTM, 'YYYY-MM-DD') , '') REQ_ST_DTM
	   		   		, 	IFNULL(TO_CHAR(B.REQ_ED_DTM, 'YYYY-MM-DD') , '') REQ_ED_DTM
					, 	IFNULL(TO_CHAR(B.REQ_ST_DU_DTM, 'YYYY-MM-DD HH24:MI') , '') REQ_ST_DU_DTM
					, 	IFNULL(TO_CHAR(B.REQ_ED_DU_DTM, 'YYYY-MM-DD HH24:MI') , '') REQ_ED_DU_DTM
					,	B.REQ_PRO_TYPE
					,	B.REQ_NEW_TYPE
					,	B.REQ_ACCEPT_TXT
					,	B.SCL_CD
			    	,	B.REQ_TYPE_CD
			    	,	B.PIA_CD
			    	,	B.LAB_INP
					,	B.ATCH_FILE_ID
					,	B.CB_ATCH_FILE_ID
					,	B.MILESTONE_ID
					,	B.PROCESS_ID
					,	'' AS PROCESS_NM
					,	B.FLOW_ID
					,	'' AS FLOW_NM
					,	B.USE_CD
					,	B.REQ_KEY
				    ,	TO_CHAR(B.REG_DTM, 'YYYY-MM-DD HH24:MI:SS') AS REG_DTM
				    ,	TO_CHAR(B.REG_DTM, 'YYYY-MM-DD') AS REG_DTM_DAY
				    ,	B.REG_USR_ID
				    ,	B.REG_USR_IP
				    ,	TO_CHAR(B.MODIFY_DTM, 'YYYY-MM-DD HH24:MI:SS') AS MODIFY_DTM
				    ,	B.MODIFY_USR_ID
				    ,	B.MODIFY_USR_IP
				FROM REQ4100 B
				WHERE 1=1
				<isNotEmpty property="mode">
					<isNotEqual property="mode" compareValue="dashboard">
						<isNotEmpty property="reqUsrId">
							AND		B.REQ_USR_ID = #reqUsrId#	
						</isNotEmpty>
					</isNotEqual>
					<isEqual property="mode" compareValue="dashboard">
						<isNotEmpty property="prjId">
							AND B.PRJ_ID = #prjId#		
						</isNotEmpty>
					</isEqual>
				</isNotEmpty>
				<isEmpty property="mode">
					<isNotEmpty property="reqUsrId">
						AND		B.REQ_USR_ID = #reqUsrId#	
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty property="reqProType">
					AND		B.REQ_PRO_TYPE = #reqProType#
				</isNotEmpty>
				<isNotEmpty property="srchFromDt">
						AND B.REQ_DTM &gt;= TO_DATE(#srchFromDt#, 'YYYY-MM-DD')
				</isNotEmpty>
				<isNotEmpty property="srchToDt">
						AND B.REQ_DTM &lt;= TO_DATE(#srchToDt#, 'YYYY-MM-DD')
				</isNotEmpty>
			) T1 WHERE 1 = 1
			<isNotEmpty property="searchSelect">
				<isNotEmpty property="searchTxt">
				<isEqual property="searchSelect" compareValue="reqNm"> 
					AND		T1.REQ_NM LIKE '%'|| #searchTxt# ||'%'
				</isEqual>
				<isEqual property="searchSelect" compareValue="reqDesc"> 
					AND		T1.REQ_DESC LIKE '%'|| #searchTxt# ||'%'
				</isEqual>	
							<isEqual property="searchSelect" compareValue="prjNm"> 
					AND		T1.PRJ_NM LIKE '%'|| #searchTxt# ||'%'
				</isEqual>	
				<isEqual property="searchSelect" compareValue="reqOrd"> 
					AND		T1.REQ_ORD LIKE '%'|| UPPER(#searchTxt#) ||'%'
				</isEqual>	
				</isNotEmpty>
			</isNotEmpty>
				<isNotEmpty property="searchSelect">
				<isNotEmpty property="searchCd">
				<isEqual property="searchSelect" compareValue="reqProType">
					AND 	T1.REQ_PRO_TYPE LIKE '%'||#searchCd#||'%'
				</isEqual>
				</isNotEmpty>
			</isNotEmpty>
		) T2
		 ORDER BY T2.REQ_PRO_TYPE ASC, T2.USR_SEL_PRJ_ORD ASC, T2.PRJ_NM, T2.REQ_ORD_NUMBER DESC, T2.REQ_DTM DESC, T2.REG_DTM DESC /* 접수요청으로 정렬 접수요청이 제일 위에 */
    </sql>
    
    <!-- 요구사항 목록 조회 -->
    <select id="req1000DAO.selectReq1000List" parameterClass="req1000VO"  resultMap="resultMapSelectReq1000">
	    /*req1000DAO.selectReq1000List 요구사항 목록을 조회한다.*/
		SELECT *
		FROM
			(
					<include refid="selectReq1000List"/>
	    	) Z
	    	WHERE 1=1 
	    	AND 	ROWNUM BETWEEN (#firstIndex#+1) AND #lastIndex#
    </select>
    
    <!-- 신규 요구사항 전체 목록 조회 -->
    <select id="req1000DAO.selectReq1000AllList" parameterClass="req1000VO"  resultMap="resultMapSelectReq1000">
	    /*req1000DAO.selectReq1000List 요구사항 목록을 조회한다.*/
		SELECT *
		FROM
			(
					<include refid="selectReq1000List"/>
	    	) Z
	    	WHERE 1=1
	    <isNotEmpty property="prjId">
			AND		Z.PRJ_ID = #prjId#
		</isNotEmpty>
    </select>
    
    <!-- 요구사항 목록 총건수. :페이징 처리 부분 -->
    <select id="req1000DAO.selectReq1000ListCnt" parameterClass="req1000VO"  resultClass="java.lang.Integer">
	    /*req1000DAO.selectReq1000ListCnt 요구사항 목록 총건수를 조회한다.*/
	    SELECT
			COUNT(*)
		FROM	(
			<include refid="selectReq1000List"/>
						) A
    </select>
    
    <!-- 요구사항 정보 조회(단건) -->
	<select id="req1000DAO.selectReq1000ReqInfo" parameterClass="java.util.Map"  resultClass="egovMap">
		/* req1000DAO.selectReq1000ReqInfo - 요구사항 정보 조회(단건) */
		SELECT MAINT1.*
		FROM
		(
			<include refid="selectReq1000List"/>
		) MAINT1
		WHERE 1=1
		<isNotEmpty property="prjId">
			AND		MAINT1.PRJ_ID = #prjId#
		</isNotEmpty>
		<isEmpty property="prjId">
			<isNotEmpty property="selPrjId">
				AND		MAINT1.PRJ_ID = #selPrjId#
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty property="reqId">
	    	AND		MAINT1.REQ_ID = #reqId#
	    </isNotEmpty>
	    
	</select>
	
	<!-- 요구사항 정보 등록 -->
	<insert id="req1000DAO.insertReq1001ReqInfo" parameterClass="java.util.Map">
		<selectKey resultClass="java.lang.String" keyProperty="newReqId">
		<![CDATA[
			/* req1000DAO.insertReq1001ReqInfo - 신규 요구사항 등록(새로운 REQ_ID 따기)*/ 
			SELECT	COALESCE( 
							SUBSTR(NEW_REQ_ID, 1, 11) || LPAD( (TO_NUMBER(SUBSTR(NEW_REQ_ID, 12, 5)) + 1) , 5, '0')
						,	'REQ' || TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMMDD') || '00001'
            		) AS NEW_REQ_ID 
			FROM	(
			            SELECT	MAX(REQ_ID)  AS NEW_REQ_ID
			            FROM	REQ4100 A
			            WHERE	1=1
                        AND		A.PRJ_ID = #prjId#
			            AND		A.REQ_ID LIKE 'REQ' || TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMMDD') || '%'
					)
		]]>
		</selectKey>
		<![CDATA[ 
			/* req1001DAO.insertReq1001ReqInfo - 요구사항 정보 등록 */ 
			INSERT INTO REQ4100
			(
			        PRJ_ID,				REQ_ID,				REQ_CLS_ID,			REQ_NO,					REQ_ORD
			        ,REQ_USR_ID,		REQ_USR_NM
			        ,REQ_DTM,			REQ_USR_DEPT_NM,	REQ_USR_POSITION_NM,	REQ_USR_DUTY_NM	
			        ,REQ_USR_EMAIL,		REQ_USR_NUM,		REQ_NM,				REQ_DESC,				REQ_CHARGER_ID
			        ,REQ_ST_DTM,		REQ_ED_DTM,			REQ_ST_DU_DTM,		REQ_ED_DU_DTM,			REQ_PRO_TYPE
			        ,REQ_NEW_TYPE,		ATCH_FILE_ID,		CB_ATCH_FILE_ID,	MILESTONE_ID		
			        ,PROCESS_ID,		FLOW_ID,			REQ_KEY
			        ,USE_CD,			REG_DTM,			REG_USR_ID,			REG_USR_IP
			        ,MODIFY_DTM,		MODIFY_USR_ID,		MODIFY_USR_IP
			)                    
			VALUES
			(
					#prjId#,			#newReqId#,			#reqClsId#,			#reqNo#,	#reqOrd#
					,#regUsrId#,		#reqUsrNm#
					,TO_DATE(REPLACE(#reqDtm#, '-',CHR(10)), 'YYYYMMDD')
					,#reqUsrDeptNm#,	#reqUsrPositionNm#,	#reqUsrDutyNm#,		#reqUsrEmail#
					,#reqUsrNum#,		#reqNm#,			#reqDesc#,			#reqChargerId#
					,TO_DATE(REPLACE(#reqStDtm#, '-',CHR(10)), 'YYYYMMDD')
					,TO_DATE(REPLACE(#reqEdDtm#, '-',CHR(10)), 'YYYYMMDD')
					,TO_DATE(REPLACE(#reqStDuDtm#, '-',CHR(10)), 'YYYYMMDD HH24:MI')
					,TO_DATE(REPLACE(#reqEdDuDtm#, '-',CHR(10)), 'YYYYMMDD HH24:MI')
					,'01'
					,'01',				#atchFileId#,		#cbAtchFileId#,		#milestroneId#
					,#processId#,		#flowId#,			#reqKey#
					,'01',				CURRENT_TIMESTAMP,			#regUsrId#,			#regUsrIp#
					,CURRENT_TIMESTAMP,			#modifyUsrId#,		#modifyUsrIp#
			)
		]]>
	</insert>
	
	<!-- 요구사항 정보 수정 -->
	<update id="req1000DAO.updateReq1001ReqInfo" parameterClass="java.util.Map">
		/* req1001DAO.updateReq1001ReqInfo - 요구사항 정보 수정 */ 
		UPDATE 	REQ4100 A
		SET		REQ_NM			= #reqNm# 	
		    ,	REQ_DESC		= #reqDesc#
		    ,	REQ_USR_POSITION_NM = #reqUsrPositionNm#
		    ,	REQ_USR_DUTY_NM = #reqUsrDutyNm#
		    ,	REQ_USR_EMAIL	= #reqUsrEmail#
			,	REQ_USR_NUM		= #reqUsrNum#
		    ,	ATCH_FILE_ID	= #atchFileId#
		    ,	MODIFY_DTM		= CURRENT_TIMESTAMP
		    ,	MODIFY_USR_ID	= #modifyUsrId#
		    ,	MODIFY_USR_IP	= #modifyUsrIp#
		    ,   REQ_CLS_ID      = #reqClsId# 
		WHERE	1=1
		AND		A.PRJ_ID = #prjId#
		AND		A.REQ_ID = #reqId#
	</update>
	
	
	<!-- 요구사항 키값 수정 
		프로젝트 ID와 요구사항 등록 시 생성된 요구사항 ID를 조합하여 암호화 시킨 후
		요구사항 키로 등록하여 요구사항의 고유한 해시값으로 사용한다.
	-->
	<update id="req1000DAO.updateReq1000ReqKey" parameterClass="java.util.Map">
		/* req1000DAO.updateReq1000ReqKey - 요구사항 키값 수정 */ 
		UPDATE 	REQ4100 A
		SET		REQ_KEY		= #reqKey# 	
		WHERE	1=1
		AND		A.PRJ_ID = #prjId#
		AND		A.REQ_ID = #reqId#
	</update>
	
	<!-- 요구사항 개발공수, 담당자 수정 -->
	<update id="req1000DAO.updateReq1001ReqSubInfo" parameterClass="java.util.Map">
		/* req1001DAO.updateReq1001ReqSubInfo - 요구사항 개발공수, 담당자 수정 */ 
		UPDATE 	REQ4100 A
		SET		REQ_CHARGER_ID = #reqChargerId#
			,	REQ_CHARGER_DT = TO_CHAR(CURRENT_TIMESTAMP,'YYYYMMDD')
		    ,	REQ_DEV_WK_TM	= #reqDevWkTm#
		    ,	MODIFY_DTM		= CURRENT_TIMESTAMP
		    ,	MODIFY_USR_ID	= #modifyUsrId#
		    ,	MODIFY_USR_IP	= #modifyUsrIp#
		WHERE	1=1
		AND		A.PRJ_ID = #prjId#
		AND		A.REQ_ID = #reqId#
	</update>
	
	<!-- 요구사항 정보 삭제 -->
	<delete id="req1000DAO.deleteReq1001ReqInfo" parameterClass="java.util.Map">
		/* req1001DAO.deleteReq1001ReqInfo - 요구사항 정보 삭제 */
		DELETE	
		FROM	REQ4100 A
		WHERE	1=1
		AND		A.PRJ_ID = #prjId#
		AND 	A.REQ_ID = #reqId#
	</delete>
	
	<!-- 요구사항 목록 조회 : 엑셀다운로드 -->
    <select id="req1000DAO.selectReq1000ExcelList" parameterClass="req1000VO"  resultClass="egovMap">
		 /*req1000DAO.selectReq1000ExcelList 요구사항 목록을 조회한다.(엑셀 다운로드) */
		SELECT *
		FROM
		(
			<include refid="selectReq1000List"/>
	    ) Z
	    WHERE 1=1
    </select>
    
    
    <!-- 요구사항 요청자 정보 조회 - 소속 명, 이메일, 연락처 -->
	<select id="req1000DAO.selectReq1000ReqUserInfo" parameterClass="java.util.Map" resultClass="egovMap">
		/* req1000DAO.selectReq1000ReqUserInfo 요구사항 요청자  정보 조회 - 소속 명, 이메일, 연락처  */
		<![CDATA[
			SELECT 
					A.USR_NM
					,	SF_ADM7000_DEPT_NM(#licGrpId#, A.DEPT_ID, '2') AS DEPT_NM
					,	A.EMAIL
			    	,	A.TELNO
			    	,	A.USR_POSITION_CD
			    	,	( SELECT SUB_CD_NM FROM ADM4100 WHERE LIC_GRP_ID = #licGrpId# AND MST_CD = 'ADM00007' AND SUB_CD = A.USR_POSITION_CD ) AS USR_POSITION_NM
			    	,	A.USR_DUTY_CD
			    	,	( SELECT SUB_CD_NM FROM ADM4100 WHERE LIC_GRP_ID = #licGrpId# AND MST_CD = 'ADM00008' AND SUB_CD = A.USR_DUTY_CD ) AS USR_DUTY_NM
			FROM 
				ADM2000 A
			WHERE 1=1
			AND A.LIC_GRP_ID 	= #licGrpId#
			AND A.USR_ID 		= #reqUsrId#
		]]>
	</select>
	
	<!-- 현재 요구사항이 속한 프로젝트명, 프로젝트 약어 조회-->
	<select id="req1000DAO.selectReq1000ReqPrjInfo" parameterClass="java.util.Map" resultClass="egovMap">
     		/* req1000DAO.selectReq1000ReqPrjInfo 현재 요구사항이 속한 프로젝트명, 프로젝트 약어 조회  */
     		<![CDATA[
	      		SELECT  
	       					A.PRJ_NM
	       				,	A.PRJ_ACRM
	       		FROM 
	       				PRJ1000 A
	       		WHERE 	1=1
	    		AND 	A.LIC_GRP_ID =  #licGrpId#
	    		AND 	A.PRJ_ID	 = 	#prjId#
			]]>
	</select>
	
	
	<!-- 요구사항 순번 조회 -->
	<select id="req1000DAO.selectReq1000NextReqOrd" parameterClass="java.util.Map" resultClass="egovMap">
		/* req1000DAO.selectReq1000NextReqOrd 요구사항 순번 조회 */
		<![CDATA[
			SELECT  CAST(TO_NUMBER(COALESCE(MAX(T.NEXT_REQ_ORD), '0')) +1 AS VARCHAR) AS REQ_ORD 
				,	DATE_FORMAT(CURRENT_TIMESTAMP, '%Y%m%d') AS REQ_DT
			FROM (
					SELECT TO_NUMBER(RIGHT(A.REQ_ORD, INSTR(REVERSE(A.REQ_ORD), '-')-1))
			       				AS NEXT_REQ_ORD   
					FROM	REQ4100 A
					WHERE	1=1
			        AND		A.PRJ_ID = #prjId# 
			) T   
		]]>
	</select>
	
	<!-- 요구사항의 첨부파일 정보 삭제 -->
	<delete id="req1000DAO.deleteReq1000ReqAtchFile" parameterClass="java.util.Map">
		/* req1000DAO.deleteReq1000ReqAtchFile - 삭제하려는 요구사항의 첨부파일 정보 삭제 */
		<![CDATA[
			DELETE 	FROM COMTNFILE
			WHERE 	1=1
			AND		ATCH_FILE_ID = #atchFileId#
		]]>	
	</delete>
	
	<!-- 요구사항의 첨부파일 상세정보 삭제 -->
	<delete id="req1000DAO.deleteReq1000ReqAtchFileDetail" parameterClass="java.util.Map">
		/* req1000DAO.deleteReq1000ReqAtchFileDetail - 삭제하려는 요구사항의 첨부파일 상세정보 삭제 */
		<![CDATA[
			DELETE 	FROM COMTNFILEDETAIL
			WHERE 	1=1
			AND		ATCH_FILE_ID = #atchFileId#
		]]>	
	</delete>

	    
    <!-- 통합대시보드 접수대기 요구사항 목록 조회 -->
    <!-- 사용자 요구사항 소요등록의 요구사항 목록 조회에 영향이 없도록 별도로 쿼리 분리 -->
	<sql id="selectReq1000IntegratedDshAcceptReqList">
		SELECT T2.*
		FROM
		(
			SELECT ROWNUM RN
				,	T1.PRJ_ID
				, ( SELECT PRJ_NM FROM PRJ1000 WHERE PRJ_ID = T1.PRJ_ID ) AS PRJ_NM
				,	T1.REQ_ID
				,	T1.REQ_ORD
				,	TO_NUMBER(IFNULL(SF_REPLACE_ALL(T1.REQ_ORD ,'[^0-9]',''),0)) AS REQ_ORD_NUMBER
				,	T1.REQ_CLS_ID
				,	COALESCE(SF_REQ4000_REQ_CLS_NM(T1.PRJ_ID, T1.REQ_CLS_ID, '1'), '') AS REQ_CLS_NM
				,	T1.REQ_NO
				,	T1.REQ_USR_ID
				,	COALESCE(T1.REQ_USR_NM, ( SELECT USR_NM FROM ADM2000 WHERE USR_ID = T1.REQ_USR_ID)) AS REQ_USR_NM
				,	T1.REQ_DTM
				,	T1.REQ_USR_DEPT_NM
				,	T1.REQ_USR_EMAIL
				,	T1.REQ_USR_NUM
				,	T1.REQ_NM
				<isNotEmpty property="reqId">
	   				,	T1.REQ_DESC
	   			</isNotEmpty>
				<isEmpty property="reqId">
					<![CDATA[ 
	   				, sf_Replace_All (T1.REQ_DESC ,'</br>|<br>|<br/>|</BR>|<BR>|<BR/>' , '' ) AS REQ_DESC    
	   				]]>
	   			</isEmpty>
				,	T1.REQ_CHARGER_ID
				,	T1.REQ_COMPLETE_RATIO
				,	T1.REQ_FP
		    	,	T1.REQ_EX_FP
				,	T1.REQ_CHARGER_NM
				, 	T1.REQ_ST_DTM
	  		   		, 	T1.REQ_ED_DTM
				, 	T1.REQ_ST_DU_DTM
				, 	T1.REQ_ED_DU_DTM
				,	T1.REQ_PRO_TYPE
				,	( SELECT SUB_CD_NM FROM ADM4100 WHERE LIC_GRP_ID = #licGrpId# AND MST_CD = 'REQ00008' AND SUB_CD = T1.REQ_PRO_TYPE ) AS REQ_PRO_TYPE_NM	  
				,	T1.REQ_NEW_TYPE
				,   ( SELECT SUB_CD_NM FROM ADM4100 WHERE LIC_GRP_ID = #licGrpId# AND MST_CD = 'REQ00009' AND SUB_CD = T1.REQ_NEW_TYPE ) AS REQ_NEW_TYPE_NM	   
				,	T1.REQ_ACCEPT_TXT
				,	T1.SCL_CD
		    	,	T1.REQ_TYPE_CD
		    	,	T1.PIA_CD
		    	,   ( SELECT SUB_CD_NM FROM ADM4100 WHERE LIC_GRP_ID = #licGrpId# AND MST_CD = 'REQ00011' AND SUB_CD = T1.SCL_CD ) AS SCL_NM	    	
		    	,   ( SELECT SUB_CD_NM FROM ADM4100 WHERE LIC_GRP_ID = #licGrpId# AND MST_CD = 'REQ00012' AND SUB_CD = T1.REQ_TYPE_CD ) AS REQ_TYPE_NM	    	
		    	,   ( SELECT SUB_CD_NM FROM ADM4100 WHERE LIC_GRP_ID = #licGrpId# AND MST_CD = 'CMM00001' AND SUB_CD = T1.PIA_CD ) AS PIA_NM
		    	,	T1.LAB_INP
				,	T1.ATCH_FILE_ID
				,	T1.CB_ATCH_FILE_ID
				,	T1.MILESTONE_ID
				,	T1.PROCESS_ID
				,	'' AS PROCESS_NM
				,	T1.FLOW_ID
				,	'' AS FLOW_NM
				,	T1.USE_CD
				,	T1.REQ_KEY
			    ,	T1.REG_DTM
			    ,	T1.REG_DTM_DAY
			    ,	T1.REG_USR_ID
			    ,	T1.REG_USR_IP
			    ,	T1.MODIFY_DTM
			    ,	T1.MODIFY_USR_ID
			    ,	T1.MODIFY_USR_IP
			FROM
			(
				SELECT 
					A.PRJ_ID
					,	A.REQ_ID
					,	A.REQ_ORD
					,	A.REQ_CLS_ID
					,	A.REQ_NO
					,	A.REQ_USR_ID
					,	A.REQ_USR_NM
					,	TO_CHAR(A.REQ_DTM, 'YYYY-MM-DD') AS REQ_DTM
					,	A.REQ_USR_DEPT_NM
					,	A.REQ_USR_EMAIL
					,	A.REQ_USR_NUM
					,	A.REQ_NM
	    			,	A.REQ_DESC
					,	A.REQ_CHARGER_ID
					,	A.REQ_COMPLETE_RATIO
					,	A.REQ_FP
			    	,	A.REQ_EX_FP
					,	D.USR_NM			AS REQ_CHARGER_NM
					, 	IFNULL(TO_CHAR(A.REQ_ST_DTM, 'YYYY-MM-DD') , '') REQ_ST_DTM
	   		   		, 	IFNULL(TO_CHAR(A.REQ_ED_DTM, 'YYYY-MM-DD') , '') REQ_ED_DTM
					, 	IFNULL(TO_CHAR(A.REQ_ST_DU_DTM, 'YYYY-MM-DD HH24:MI') , '') REQ_ST_DU_DTM
					, 	IFNULL(TO_CHAR(A.REQ_ED_DU_DTM, 'YYYY-MM-DD HH24:MI') , '') REQ_ED_DU_DTM
					,	A.REQ_PRO_TYPE
					,	A.REQ_NEW_TYPE
					,	A.REQ_ACCEPT_TXT
					,	A.SCL_CD
			    	,	A.REQ_TYPE_CD
			    	,	A.PIA_CD
			    	,	A.LAB_INP
					,	A.ATCH_FILE_ID
					,	A.CB_ATCH_FILE_ID
					,	A.MILESTONE_ID
					,	A.PROCESS_ID
					,	'' AS PROCESS_NM
					,	A.FLOW_ID
					,	'' AS FLOW_NM
					,	A.USE_CD
					,	A.REQ_KEY
				    ,	TO_CHAR(A.REG_DTM, 'YYYY-MM-DD HH24:MI:SS') AS REG_DTM
				    ,	TO_CHAR(A.REG_DTM, 'YYYY-MM-DD') AS REG_DTM_DAY
				    ,	A.REG_USR_ID
				    ,	A.REG_USR_IP
				    ,	TO_CHAR(A.MODIFY_DTM, 'YYYY-MM-DD HH24:MI:SS') AS MODIFY_DTM
				    ,	A.MODIFY_USR_ID
				    ,	A.MODIFY_USR_IP
			    FROM REQ4100 A
				LEFT JOIN ADM2000 D
				ON ( A.REQ_CHARGER_ID 	= D.USR_ID )
			    WHERE 1=1
			) T1 
			WHERE 1 = 1
			AND T1.PRJ_ID = #prjId#		
			AND	T1.REQ_PRO_TYPE = '01' /* 접수대기인 요구사항만 조회 */
		) T2
		ORDER BY T2.REQ_PRO_TYPE ASC, T2.REQ_ORD_NUMBER DESC, T2.REQ_DTM DESC, T2.REG_DTM DESC /* 접수요청으로 정렬 접수요청이 제일 위에 */
    </sql>
    
    <!-- 통합대시보드 접수대기 요구사항 목록 조회 -->
    <select id="req1000DAO.selectReq1000IntegratedDshAcceptReqList" parameterClass="java.util.Map"  resultClass="egovMap">
	    /* req1000DAO.selectReq1000IntegratedDshAcceptReqList 통합대시보드 접수대기 요구사항 목록을 조회한다. */
		SELECT *
		FROM
		(
				<include refid="selectReq1000IntegratedDshAcceptReqList"/>
	    ) Z
	    WHERE 1=1 
	    AND ROWNUM BETWEEN (#firstIndex#+1) AND #lastIndex#
    </select>

    
    <!-- 요구사항 목록 총건수. :페이징 처리 부분 -->
    <select id="req1000DAO.selectReq1000IntegratedDshAcceptReqListCnt" parameterClass="java.util.Map"  resultClass="java.lang.Integer">
	    /* req1000DAO.selectReq1000IntegratedDshAcceptReqListCnt 통합대시보드 접수대기 요구사항 목록 총 건수를 조회한다 : 그리드 페이징 */
		SELECT
			COUNT(*) AS REQ_CNT
		FROM	
		(
			<include refid="selectReq1000IntegratedDshAcceptReqList"/>
		) Z
    </select>

</sqlMap>