<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="stm2000DAO">
	<typeAlias alias="egovMap" 		type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias alias="stm2000VO"	type="kr.opensoftlab.oslops.stm.stm2000.stm2000.vo.Stm2000VO"/>


	<resultMap id="resultMapSelectStm2000" class="stm2000VO">
		<result property="rn"  			column="RN"/>
		<result property="svnRepId"     column="SVN_REP_ID" /> <!-- SVN Repository 코드 --> 
		<result property="svnRepNm"     column="SVN_REP_NM" /> <!-- SVN Repository 명 --> 
		<result property="svnRepUrl"    column="SVN_REP_URL" /> <!-- SVN Repository URL --> 
		<result property="svnTxt"       column="SVN_TXT" /> <!-- SVN RepositoryI Comment --> 
		<result property="useCd"        column="USE_CD" /> <!-- 사용여부(코드 : CMM00001) --> 
		<result property="useCd"  		column="USE_CD"/>
		<result property="regDtm"  		column="REG_DTM"/>
		<result property="useNm"  		column="USE_NM"/>
		<result property="regUsrId"  	column="REG_USR_ID"/>

    </resultMap>
    
    
   	
	<!-- sql Define  -->
	<!-- SVN Repository 목록 조회 -->
	<sql id="selectStm2000List">
		<![CDATA[
			SELECT
		            SVN_REP_ID              /* SVN Repository 코드 */ 
				,	SVN_REP_NM              /* SVN Repository 명 */ 
		        ,	SVN_REP_URL             /* SVN Repository URL */ 
		        ,	COALESCE(SVN_TXT, SF_REPLACE_ALL(SVN_TXT ,'</br>|<br>|<br/>|</BR>|<BR>|<BR/>' , '' ), ' ')  AS SVN_TXT /* SVN RepositoryI Comment */ 
		        ,	USE_CD                  /* 사용여부(코드 : CMM00001) */
		        ,	SF_ADM4100_COM_CD_INFO(#licGrpId#, 'CMM00001', USE_CD, '1') AS USE_NM 
				,	TO_CHAR(REG_DTM, 'YYYY-MM-DD HH24:MI:SS') AS REG_DTM    /* 최초등록 일시 */ 
		        ,	REG_USR_ID              /* 최초등록자 ID */ 
		        ,	REG_USR_IP              /* 최초등록자 IP */ 
		        ,	TO_CHAR(MODIFY_DTM, 'YYYY-MM-DD HH24:MI:SS') AS MODIFY_DTM  /* 최종수정일시 */ 
		        ,	MODIFY_USR_ID           /* 최종수정자 ID */ 
		        ,	MODIFY_USR_IP           /* 최종수정자 IP */ 
			FROM SVN1000
			WHERE   1=1
			AND		LIC_GRP_ID = #licGrpId#
		]]>
		<isNotEmpty property="searchSelect">
			<isNotEmpty property="searchTxt">
			<isEqual property="searchSelect" compareValue="svnRepNm"> 
				AND		UPPER( SVN_REP_NM ) like '%'|| UPPER( #searchTxt# ) ||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="svnTxt"> 
				AND		UPPER( SVN_TXT )  like '%'|| UPPER( #searchTxt#  ) ||'%'
			</isEqual>
			</isNotEmpty>
		</isNotEmpty>
		
		<isNotEmpty property="searchSelect">
			<isNotEmpty property="searchCd">
			<isEqual property="searchSelect" compareValue="useCd">
				AND		USE_CD = #searchCd#
			</isEqual>
			</isNotEmpty>
		</isNotEmpty>
    </sql>
    
    <!-- SVN Repository 목록 조회 -->
    <select id="stm2000DAO.selectStm2000RepositoryList" parameterClass="stm2000VO"  resultMap="resultMapSelectStm2000">
	    /*stm2000DAO.selectStm2000RepositoryList repository 목록을 조회한다.*/
		SELECT *
		FROM
			(
    		SELECT ROWNUM RN,
    			     A.*
    		FROM
    		(
					<include refid="selectStm2000List"/>
	    			) A
	    	)
	    	 WHERE RN BETWEEN (#firstIndex#+1) AND #lastIndex#
    </select>
    
    <!-- repository 목록 총건수. :페이징 처리 부분 -->
    <select id="stm2000DAO.selectStm2000RepositoryListCnt" parameterClass="stm2000VO"  resultClass="java.lang.Integer">
	    /*stm2000DAO.selectStm2000RepositoryListCnt repository 목록 총건수를 조회한다.*/
	    	SELECT
					COUNT(*)
			FROM	(
						<include refid="selectStm2000List"/>
					) A
    </select>
    
 	<!--  SVN Repository 정보 조회(단건)  --> 
	<select id="stm2000DAO.selectStm2000Info" parameterClass="java.util.Map"  resultClass="egovMap">
		/* stm2000DAO.selectStm2000Info - Svn repository 정보 단건 조회한다. */
			SELECT
			            SVN_REP_ID,              /* SVN Repository 코드 */ 
			            SVN_REP_NM,              /* SVN Repository 명 */ 
			            SVN_REP_URL,             /* SVN Repository URL */ 
			            SVN_TXT,                 /* SVN RepositoryI Comment */ 
			            SVN_USR_ID,              /* SVN 사용자 ID */ 
			            SVN_USR_PW,              /* SVN 사용자 암호 */ 
			            USE_CD,                  /* 사용여부(코드 : CMM00001) */ 
			            REG_DTM,                 /* 최초등록 일시 */ 
			            REG_USR_ID,              /* 최초등록자 ID */ 
			            REG_USR_IP,              /* 최초등록자 IP */ 
			            MODIFY_DTM,              /* 최종수정일시 */ 
			            MODIFY_USR_ID,           /* 최종수정자 ID */ 
			            MODIFY_USR_IP            /* 최종수정자 IP */ 
			FROM
			            SVN1000
			WHERE       1=1
			  AND       SVN_REP_ID = #svnRepId# 
			  AND       LIC_GRP_ID = #licGrpId#
	</select>
    	
	<!-- 새로운 SVN 정보를 등록한다. -->
    <insert id="stm2000DAO.insertStm2000Info" parameterClass="java.util.Map">
		<selectKey resultClass="java.lang.String" keyProperty="newSvnRepId">
		<![CDATA[
			/* stm2000DAO.insertStm2000Info - SVN Repository 등록(새로운 SVN_REP_ID 따기)*/ 
			SELECT	COALESCE( 
							SUBSTR(NEW_SVN_REP_ID, 1, 11) || LPAD( (TO_NUMBER(SUBSTR(NEW_SVN_REP_ID, 12, 5)) + 1) , 5, '0')
						,	'SVN' || TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMMDD') || '00001'
            		) AS NEW_SVN_REP_ID 
			FROM	(
			            SELECT	MAX(SVN_REP_ID)  AS NEW_SVN_REP_ID
			            FROM	SVN1000 A
			            WHERE	1=1
			            AND		SVN_REP_ID LIKE 'SVN' || TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMMDD') || '%'
					)
		]]>
		</selectKey>
		<![CDATA[ 
			/* stm2000DAO.insertStm2000Info  - SVN Repository를 등록한다. */ 
			INSERT INTO SVN1000
			(
				SVN_REP_ID,		SVN_REP_NM, 	SVN_REP_URL, 	SVN_TXT, 
				SVN_USR_ID,		SVN_USR_PW, 	USE_CD, 		REG_DTM, 
				REG_USR_ID,		REG_USR_IP,  	MODIFY_DTM, 	MODIFY_USR_ID, 	
				MODIFY_USR_IP,	LIC_GRP_ID
			)
			VALUES
			(
				#newSvnRepId#,  #svnRepNm#, 	#svnRepUrl#, 		#svnTxt#, 
				#svnUsrId#, 	#svnUsrPw#,		#useCd#, 			CURRENT_TIMESTAMP, 
				#regUsrId#,		#regUsrIp#, 	CURRENT_TIMESTAMP,	#modifyUsrId#, 
				#modifyUsrIp#,	#licGrpId#
			)
		]]>
	</insert>
    
	<!-- SVN Repository 정보 수정 -->
	<update id="stm2000DAO.updateStm2000Info" parameterClass="java.util.Map">
		/* stm2000DAO.updateSvn2000Info - Svn repository 정보 수정 */ 
			 UPDATE     SVN1000     SET 
			            SVN_REP_ID = #svnRepId#             , /* SVN Repository 코드 */ 
			            SVN_REP_NM = #svnRepNm#             , /* SVN Repository 명 */ 
			            SVN_REP_URL = #svnRepUrl#           , /* SVN Repository URL */ 
			            SVN_TXT = #svnTxt#                  , /* SVN RepositoryI Comment */ 
			            SVN_USR_ID = #svnUsrId#             , /* SVN 사용자 ID */ 
			            SVN_USR_PW = #svnUsrPw#             , /* SVN 사용자 암호 */ 
			            USE_CD = #useCd#                    , /* 사용여부(코드 : CMM00001) */ 
			            MODIFY_DTM = CURRENT_TIMESTAMP		, /* 최종수정일시 */ 
			            MODIFY_USR_ID = #modifyUsrId#       , /* 최종수정자 ID */ 
			            MODIFY_USR_IP = #modifyUsrIp#         /* 최종수정자 IP */ 
			WHERE	1=1
          	AND   		SVN_REP_ID = #svnRepId#              /* SVN Repository 코드 */ 
          	AND 		LIC_GRP_ID = #licGrpId#
	</update>
	
	<!-- SVN Repository 관리 삭제 -->
	<delete id="stm2000DAO.deleteStm2000Info" parameterClass="java.util.Map">
		/* stm2000DAO.deleteStm2000Info - SVN repository를 삭제한다. */ 
		DELETE FROM	SVN1000
		WHERE	1=1
		AND   	SVN_REP_ID = #svnRepId#		/* SVN Repository 코드 */ 
        AND 	LIC_GRP_ID = #licGrpId#
	</delete>
	
	
	<!-- SVN Repository 등록 상태 확인 -->
	<select id="stm2000DAO.selectStm2000UseCountInfo" parameterClass="java.util.Map"  resultClass="java.lang.Integer">
		/* stm2000DAO.selectStm2000UseCountInfo - SVN Repository 등록 상태를 확인한다. */ 
		SELECT	COUNT(1) AS CNT
	   	FROM 	SVN1100 A
       	WHERE   1=1
		AND   	SVN_REP_ID = #svnRepId#		/* SVN Repository 코드 */ 
        AND 	LIC_GRP_ID = #licGrpId#
        AND     ROWNUM = 1
	</select>
		
	
    <!-- SVN Repository 허용 역할 정보 저장 -->
	<insert id="stm2000DAO.insertStm2000SvnAuthGrpInfo" parameterClass="java.util.Map">
		/* stm2000DAO.insertStm2000SvnAuthGrpInfo - SVN Repository 허용 역할 정보 저장  */
		<![CDATA[
			INSERT INTO SVN1200
			(
				PRJ_ID,				SVN_REP_ID,				AUTH_GRP_ID,
				REG_DTM,			REG_USR_ID,				REG_USR_IP,
				MODIFY_DTM,			MODIFY_USR_ID,			MODIFY_USR_IP
			)
			VALUES
			(
				#prjId#,				#svnRepId#,			#authGrpId#,
				CURRENT_TIMESTAMP,		#regUsrId#,			#regUsrIp#,
				CURRENT_TIMESTAMP,		#modifyUsrId#,		#modifyUsrIp#
			)		
		
		]]>
	</insert>
	
	<!-- SVN Repository 허용 역할 정보 제거 -->
	<delete id="stm2000DAO.deleteStm2000SvnAuthGrpInfo" parameterClass="java.util.Map">
		/* stm2000DAO.deleteStm2000SvnAuthGrpInfo - SVN Repository 허용 역할 정보 제거  */
		<![CDATA[
			DELETE FROM SVN1200 A
			WHERE 1=1
			AND		A.PRJ_ID = #prjId#
			AND		A.SVN_REP_ID = #svnRepId#
			AND		A.AUTH_GRP_ID = #authGrpId#
		]]>
	</delete>
	
	<!-- SVN Repository 허용 역할 정보 목록 가져오기 -->
	<select id="stm2000DAO.selectStm2000SvnAuthGrpList"  parameterClass="java.util.Map" resultClass="egovMap">
		/* stm2000DAO.selectStm2000SvnAuthGrpList - SVN Repository 허용 역할 정보 목록 가져오기  */
		<![CDATA[
			SELECT
				T1.PRJ_ID
				,	T1.SVN_REP_ID
				,	T1.AUTH_GRP_ID
			    ,	T1.AUTH_GRP_NM
			    ,	T1.AUTH_GRP_DESC
			    ,	T1.CREATE_DT
			    ,	T1.USE_CD
			    ,	T1.USR_TYP
			    ,	SF_ADM4100_COM_CD_INFO(#licGrpId#, 'ADM00004', T1.USR_TYP, '1') AS USR_TYP_NM
			    ,	T1.ORD
			FROM
			(
				SELECT 
						A.PRJ_ID
					,	A.SVN_REP_ID
					,	A.AUTH_GRP_ID
				    ,	B.AUTH_GRP_NM
				    ,	B.AUTH_GRP_DESC
				    ,	B.CREATE_DT
				    ,	B.USE_CD
				    ,	B.USR_TYP
				    ,	B.ORD
				FROM SVN1200 A
				INNER JOIN ADM1100 B
				ON ( A.PRJ_ID = B.PRJ_ID AND A.AUTH_GRP_ID = B.AUTH_GRP_ID  )
				WHERE 1=1
				AND B.LIC_GRP_ID = #licGrpId#
				AND	A.PRJ_ID = #prjId#
				AND A.SVN_REP_ID = #svnRepId#
				AND B.USE_CD = '01'
			) T1
			ORDER BY T1.ORD
		]]>
	</select>
	
	<!--SVN Repository 허용 역할 정보 단건 갯수 가져오기 -->
	<select id="stm2000DAO.selectStm2000SvnAuthGrpCnt"  parameterClass="java.util.Map" resultClass="java.lang.Integer">
		/* stm2000DAO.selectStm2000SvnAuthGrpCnt -  SVN Repository 허용 역할 정보 단건 갯수 가져오기 */
		<![CDATA[
			SELECT COUNT(*) AS AUTH_GRP_CNT
			FROM SVN1200 A
			WHERE 1=1
			AND	A.PRJ_ID = #prjId#
			AND A.SVN_REP_ID = #svnRepId#
			AND A.AUTH_GRP_ID = #authGrpId#
		]]>
	</select>
</sqlMap>
