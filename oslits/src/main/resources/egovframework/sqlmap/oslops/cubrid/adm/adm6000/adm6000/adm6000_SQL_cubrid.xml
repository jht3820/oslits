<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="adm6000DAO">
	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	
	<select id="adm6000DAO.selectAdm6000List" parameterClass="java.util.Map" resultClass="egovMap">
		/* 휴일을 조회 한다. */
		SELECT LIC_GRP_ID ,
					HOLI_CD ,
					HOLI_DATE AS HOLI_SEQ ,
					TO_CHAR( TO_DATE(HOLI_DATE, 'YYYYMMDD'), 'YYYY-MM-DD') HOLI_DATE,
		       		HOLI_DESC
		  FROM 	ADM6000 
		 WHERE LIC_GRP_ID = #licGrpId#
		 <isNotEmpty property="startDt">
		 	<![CDATA[
		     AND REPLACE(HOLI_DATE,'-',CHR(10)) >= REPLACE(#startDt#,'-',CHR(10)) 
			]]>
		</isNotEmpty>
		<isNotEmpty property="endDt">
			<![CDATA[
		     AND REPLACE(HOLI_DATE,'-',CHR(10)) <= REPLACE(#endDt#,'-',CHR(10))
			]]>
		</isNotEmpty>
	     /* AND HOLI_CD NOT IN ('02','01') */ /* 토요일 , 일요일은 안보여지도록 */
	</select>
	
    <insert id="adm6000DAO.insertAdm6000HoliInfo" parameterClass="java.util.Map" >
    	/* adm2000DAO.adm6000DAO.insertAdm6000HoliInfo 휴일 단건 등록 */
		<![CDATA[ 
		INSERT INTO ADM6000(
			LIC_GRP_ID ,
			HOLI_DATE ,
			DAY_WEEK ,
			HOLI_CD ,
			HOLI_DESC ,
			REG_DTM ,
			REG_USR_ID ,
			REG_USR_IP,
			MODIFY_DTM,
			MODIFY_USR_ID,
			MODIFY_USR_IP
		)VALUES(
			#licGrpId# ,
			REPLACE(#holiDate#,'-',CHR(10)) ,
			TO_CHAR(TO_DATE(#holiDate#,'YYYY-MM-DD'),'d' ) ,
			#holiCd# ,
			#holiDesc# ,
			CURRENT_TIMESTAMP ,
			#usrId# ,
			#usrIp#,
			CURRENT_TIMESTAMP,
			#usrId#,
			#usrIp#
		)
		]]>
    </insert>
    
    
    <update id="adm6000DAO.updateAdm6000HoliInfo" parameterClass="java.util.Map">
    	/* adm6000DAO.updateAdm6000HoliInfo 휴일 수정 */
    	<![CDATA[ 
			UPDATE		ADM6000 
				 SET		HOLI_CD				= #holiCd# ,
							HOLI_DESC			= #holiDesc# ,
							MODIFY_DTM			=	CURRENT_TIMESTAMP,
							MODIFY_USR_ID	= #usrId#,
							MODIFY_USR_IP	= #usrIp#
			 WHERE 	LIC_GRP_ID			= #licGrpId#
				 AND		HOLI_DATE			= REPLACE(#holiDate#,'-',CHR(10))
   		]]>
    </update>
	
	
	<delete id="adm6000DAO.deleteAdm6000HoliInfo" parameterClass="java.util.Map">
		/* adm6000DAO.updateAdm6000HoliInfo 휴일 삭제 */
		<![CDATA[ 
		DELETE  FROM ADM6000
		WHERE  LIC_GRP_ID 	= #licGrpId#
		    AND  HOLI_DATE	= REPLACE(#holiDate#,'-',CHR(10))
		]]>
	</delete>
	
	
	<delete id="adm6000DAO.deleteAdm6000HoliList" parameterClass="java.util.Map">
		/* adm6000DAO.deleteAdm6000HoliInfo 휴일일괄 삭제 */
		<![CDATA[ 
		DELETE  FROM ADM6000
		WHERE  LIC_GRP_ID = #licGrpId#
		    AND  HOLI_DATE LIKE #baseDate#||'%'
	    ]]>
	</delete>
	
	
	<select id="adm6000DAO.selectHoliCdList" parameterClass="java.util.Map" resultClass="egovMap">
		/* adm6000DAO.selectHoliCdList 휴일 공통코드 조회 ( 음력으로 등록 된 것만 )*/
		<![CDATA[ 
		SELECT SUB_CD,
					SUB_CD_NM, 
					SUB_CD_REF1,
					SUB_CD_REF2
		   FROM ADM4100  
		WHERE LIC_GRP_ID = #licGrpId#
		     AND MST_CD = 'CMM00002'
		     AND SUB_CD_REF2 = '-'
			]]>
	</select>
	
	
	<insert id="adm6000DAO.insertAdm6000HoliList" parameterClass="java.util.Map" >
		/* adm6000DAO.insertAdm6000HoliList 휴일 일괄등록 ( 토요일, 일요일, 양력으로 등록 된 데이터 )*/
		<![CDATA[ 
		INSERT INTO ADM6000 ( 
			 LIC_GRP_ID
			,HOLI_DATE
			,DAY_WEEK
			,HOLI_CD
			,HOLI_DESC
			,REG_DTM
			,REG_USR_ID
			,REG_USR_IP
			,MODIFY_DTM
			,MODIFY_USR_ID
			,MODIFY_USR_IP
		)
		SELECT #licGrpId# 	  AS LIC_GRP_ID ,
					YMD				  AS HOLI_DATE , 
		       		DAY_WEEK ,
		       		SUB_CD 		  AS HOLI_CD ,
		       		SF_ADM4100_COM_CD_INFO(#licGrpId#, 'CMM00002', SUB_CD, '1') AS SUB_CD_NM ,
		       		CURRENT_TIMESTAMP 		  AS REG_DTM,
		       		#usrId#		  AS REG_USR_ID,
		       		#usrIp#	 	  AS REG_USR_IP,
		       		CURRENT_TIMESTAMP		  AS MODIFY_DTM,
		       		#usrId#		  AS MODIFY_USR_ID,
		       		#usrIp#	      AS MODIFY_USR_IP
		  FROM 
		       (SELECT TO_CHAR(A.YYYYMMDD, 'YYYYMMDD') AS YMD,
			             	 CASE 
			                 	WHEN DECODE( TO_CHAR(A.YYYYMMDD, 'd'),'1','01','7','02') IS NULL AND B.SUB_CD IS NOT NULL 
			                 		THEN B.SUB_CD 
			                 	WHEN DECODE( TO_CHAR(A.YYYYMMDD, 'd'),'1','01','7','02') IS NOT NULL AND B.SUB_CD IS NOT NULL 
			                 		THEN B.SUB_CD 
			                 	ELSE DECODE( TO_CHAR(A.YYYYMMDD, 'd'),'1','01','7','02') 
			             	  END SUB_CD ,
			                TO_CHAR(A.YYYYMMDD, 'd') DAY_WEEK
		         FROM 
		              (SELECT START_DATE + LEVEL - 1 AS YYYYMMDD 
		                FROM 
		                     (SELECT TO_DATE(#baseDate#||'0101', 'YYYYMMDD') AS START_DATE, 
		                            TO_DATE(#baseDate#||'1231', 'YYYYMMDD') AS END_DATE 
		                       FROM db_root 
	    ]]>
		                     ) CONNECT BY LEVEL <![CDATA[<=]]> END_DATE - START_DATE + 1 
		<![CDATA[ 
		              ) A , 
		              (SELECT  SUB_CD, 
		                     		SUB_CD_NM, 
		                     		SUB_CD_REF1 
		                FROM ADM4100 
		               WHERE LIC_GRP_ID = #licGrpId# /* 라이선스 그룹 ID*/
		                 AND MST_CD = 'CMM00002' 		  /* 휴일관리 공통코드 값 */
		                 AND USE_YN = 'Y' 					  /* 사용유무가 Y 인것*/
		                 AND SUB_CD NOT IN ('02','01')	  /* 토요일, 일요일은 제외 */
		                 AND SUB_CD_REF2 != '-'			  /* 음력이 아닌 데이터 가져온다 */
		              ) B 
		        WHERE TO_CHAR(A.YYYYMMDD, 'YYYYMMDD') = #baseDate#||B.SUB_CD_REF1(+) 
		       )
		 WHERE SUB_CD IS NOT NULL
	    ]]>
	</insert>
	
	<insert id="adm6000DAO.insertAdm6000HoliSolarList" parameterClass="java.util.Map" >
		/* adm6000DAO.insertAdm6000HoliSolarList 휴일 일괄 등록 ( 음력으로 등록된 데이터 ) */
		<![CDATA[ 
		MERGE INTO ADM6000 A
		USING (
						SELECT  #licGrpId#									AS LIC_GRP_ID ,
		       			  			 #subCdRef1#  							AS HOLI_DATE ,
		       			  			 TO_CHAR(TO_DATE(#subCdRef1#), 'd') 	AS DAY_WEEK,
		       						 #subCd#	 							AS HOLI_CD ,
		       						 #subCdNm# 								AS HOLI_DESC,
                                     #usrId#								AS USR_ID,
                                     #usrIp#								AS USR_IP
		  				FROM db_root
		       ) B
		   ON ( A.LIC_GRP_ID = B.LIC_GRP_ID AND A.HOLI_DATE = B.HOLI_DATE ) 
		WHEN MATCHED THEN 
		    UPDATE  SET	
		    			A.HOLI_CD = B.HOLI_CD, 
		           		A.HOLI_DESC = B.HOLI_DESC, 
                        A.MODIFY_DTM = CURRENT_TIMESTAMP,
                        A.MODIFY_USR_ID = B.USR_ID,
                        A.MODIFY_USR_IP = B.USR_IP
		WHEN NOT MATCHED THEN 
		    INSERT 
		           (
		               LIC_GRP_ID, 
		               HOLI_DATE, 
		               DAY_WEEK, 
		               HOLI_CD,
		               HOLI_DESC,
                       REG_DTM,
                       REG_USR_ID,
                       REG_USR_IP,
                       MODIFY_DTM,
                       MODIFY_USR_ID,
                       MODIFY_USR_IP
		           ) 
		           VALUES 
		           (
		               B.LIC_GRP_ID, 
		               B.HOLI_DATE, 
		               B.DAY_WEEK, 
		               B.HOLI_CD,
		               B.HOLI_DESC,
                       CURRENT_TIMESTAMP,
                       B.USR_ID,
                       B.USR_IP,
                       CURRENT_TIMESTAMP,
                       B.USR_ID,
                       B.USR_IP
		           )
	    ]]>
	</insert>
	
	
</sqlMap>
