<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="dsh3000DAO">
	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias alias="dsh3000VO"	type="kr.opensoftlab.oslops.dsh.dsh3000.dsh3000.vo.Dsh3000VO"/>
	
	 <!-- [전체 그룹 차트] 프로젝트 그룹별 총갯수 + 최종 완료 갯수-->
    <select id="dsh3000DAO.selectDsh3000AllPrjGrpReqCntList" parameterClass="java.util.Map" resultClass="egovMap">
    	/* dsh3000DAO.selectDsh3000AllPrjGrpReqCntList - [그룹 차트] 프로젝트 그룹별 총갯수 + 최종 완료 갯수 */
    		SELECT D.PRJ_ID, D.PRJ_NM, SUM(C.ALL_CNT) AS ALL_CNT, SUM(C.END_CNT) AS END_CNT
			FROM
			(
				SELECT B.*, C.PRJ_NM, C.PRJ_GRP_ID, C.ORD
			    FROM
			    (
			        SELECT	A.PRJ_ID
			            , COUNT(*) AS ALL_CNT
			            , COUNT(DECODE(A.REQ_PRO_TYPE,'04',1)) AS END_CNT
			        FROM REQ4100 A
			        WHERE 1=1
			        <![CDATA[
						AND A.REQ_PRO_TYPE <> '03'
						AND A.REQ_PRO_TYPE <> '05'
					]]>
			            AND A.PROCESS_ID IS NOT NULL
			        GROUP BY A.PRJ_ID
			    ) B
			    INNER JOIN PRJ1000 C
			    ON ( B.PRJ_ID = C.PRJ_ID )
			    LEFT JOIN 
			    (            
	                SELECT	Z.PRJ_ID
	                    ,	Z.USR_ID
	                FROM	ADM1300 Z
	                INNER JOIN ADM1100 X
	                ON ( Z.PRJ_ID = X.PRJ_ID AND Z.AUTH_GRP_ID = X.AUTH_GRP_ID AND Z.USR_ID = #usrId#)
	                WHERE	1=1
	                GROUP BY Z.PRJ_ID, Z.USR_ID
    			) D    
    			ON (C.PRJ_ID = D.PRJ_ID)
			    WHERE 1=1
    			AND (C.PRJ_GRP_ID IS NULL OR D.USR_ID IS NOT NULL)
			) C
			INNER JOIN PRJ1000 D
			ON ( C.PRJ_GRP_ID = D.PRJ_ID )
			WHERE 1=1
			AND D.LIC_GRP_ID = #licGrpId#
			GROUP BY D.PRJ_ID, D.PRJ_NM ,D.ORD
			ORDER BY D.ORD
    </select>
    
    <!-- [전체 그룹 차트] 월별 프로젝트 그룹별 요구사항 갯수-->
    <select id="dsh3000DAO.selectDsh3000MonthAllPrjGrpReqCntList" parameterClass="java.util.Map" resultClass="egovMap">
    	/* "dsh3000DAO.selectDsh3000MonthAllPrjGrpReqCntList" -  [그룹 차트] 월별 프로젝트 그룹별 요구사항 갯수 */
    	SELECT C.*,D.PRJ_NM
		FROM
		(
			SELECT B.PRJ_GRP_ID AS PRJ_ID,  A.REQ_ED_DU_MM, SUM(A.REQ_MM_TOTAL_CNT) AS REQ_MM_TOTAL_CNT, SUM(A.REQ_ED_MM_CNT) AS REQ_ED_MM_CNT, SUM(A.REQ_MM_TOTAL_CNT) OVER (PARTITION BY REQ_ED_DU_MM) AS REQ_TOTAL_CNT
            FROM
            (
                SELECT 
                    Y.PRJ_ID
                    , Y.REQ_ED_DU_MM, COUNT(*) AS REQ_MM_TOTAL_CNT
                    , COUNT(DECODE(Y.REQ_ED_RATIO_NUM,1,1)) AS REQ_ED_MM_CNT
                FROM
                (
                    SELECT Z.*, TO_CHAR(Z.REQ_ED_DU_DTM,'YYYY') AS REQ_ED_DU_YY, TO_CHAR(Z.REQ_ED_DU_DTM,'MM') AS REQ_ED_DU_MM,
                        CASE
                            WHEN Z.REQ_PRO_TYPE != '04' THEN -1
                            WHEN Z.REQ_ED_DU_DTM IS NULL THEN -1
                            WHEN Z.REQ_ED_DTM IS NULL THEN -1
                            <![CDATA[
                                WHEN TO_DATE(TO_CHAR(COALESCE(Z.REQ_ED_DTM,CURRENT_TIMESTAMP),'YYYY-MM-DD'),'YYYY-MM-DD') <= TO_DATE(TO_CHAR(Z.REQ_ED_DU_DTM,'YYYY-MM-DD'),'YYYY-MM-DD') THEN 1
                            ]]>
                            ELSE 0 END AS REQ_ED_RATIO_NUM
                    FROM REQ4100 Z
                    WHERE 1=1
                    AND Z.PROCESS_ID IS NOT NULL
                    AND Z.REQ_PRO_TYPE != '05'
                ) Y
                WHERE 1=1
                GROUP BY Y.PRJ_ID, Y.REQ_ED_DU_MM
            ) A
            INNER JOIN PRJ1000 B
            ON ( A.PRJ_ID = B.PRJ_ID AND A.REQ_ED_DU_MM IS NOT NULL AND B.LIC_GRP_ID = #licGrpId#)
            LEFT JOIN (            
                SELECT	Z.PRJ_ID
                    ,	Z.USR_ID
                FROM	ADM1300 Z
                INNER JOIN ADM1100 X
                ON ( Z.PRJ_ID = X.PRJ_ID AND Z.AUTH_GRP_ID = X.AUTH_GRP_ID AND Z.USR_ID = #usrId#)
                GROUP BY Z.PRJ_ID, Z.USR_ID
  			) C
  			ON ( B.PRJ_ID = C.PRJ_ID )
            WHERE 1=1
  			AND (B.PRJ_GRP_ID IS NULL OR C.USR_ID IS NOT NULL)
            GROUP BY B.PRJ_GRP_ID, A.REQ_ED_DU_MM
		) C
		INNER JOIN PRJ1000 D
		ON ( C.PRJ_ID = D.PRJ_ID )
		WHERE 1=1
		ORDER BY C.REQ_ED_DU_MM, D.ORD

    </select>   
    
	 <!-- [프로젝트 그룹별 차트] 프로젝트 그룹별 총갯수 + 최종 완료 갯수-->
    <select id="dsh3000DAO.selectDsh3000PrjGrpReqCntList" parameterClass="java.util.Map" resultClass="egovMap">
    	/* dsh3000DAO.selectDsh3000PrjGrpReqCntList -[프로젝트 그룹별 차트] 프로젝트 그룹별 총갯수 + 최종 완료 갯수 */
    		SELECT C.PRJ_GRP_ID AS PRJ_ID, C.PRJ_NM, B.ALL_CNT, B.END_CNT 
		    FROM
		    (
		    	SELECT	A.PRJ_ID
		    		, COUNT(*) AS ALL_CNT
		    		, COUNT(DECODE(A.REQ_PRO_TYPE,'04',1)) AS END_CNT
				FROM REQ4100 A
				WHERE 1=1
					<![CDATA[
						AND A.REQ_PRO_TYPE <> '03'
						AND A.REQ_PRO_TYPE <> '05'
					]]>
		            AND A.PROCESS_ID IS NOT NULL
				GROUP BY A.PRJ_ID
		    ) B
		    INNER JOIN PRJ1000 C
		    ON ( B.PRJ_ID = C.PRJ_ID AND C.LIC_GRP_ID = #licGrpId#)
		    LEFT JOIN
		    (            
                SELECT	Z.PRJ_ID
                    ,	Z.USR_ID
                FROM ADM1300 Z
                INNER JOIN ADM1100 X
                ON ( Z.PRJ_ID = X.PRJ_ID  AND Z.AUTH_GRP_ID = X.AUTH_GRP_ID AND Z.USR_ID = #usrId#)
                WHERE	1=1
                GROUP BY Z.PRJ_ID, Z.USR_ID
        	) D
        	ON ( C.PRJ_ID = D.PRJ_ID )
		    WHERE 1=1
        	AND (C.PRJ_GRP_ID IS NULL OR D.USR_ID IS NOT NULL)
		    ORDER BY C.PRJ_GRP_ID, C.ORD
    </select>   
    
    <!-- [프로젝트 그룹별 차트]  월별 프로젝트 그룹별 요구사항 갯수-->
    <select id="dsh3000DAO.selectDsh3000MonthPrjGrpReqCntList" parameterClass="java.util.Map" resultClass="egovMap">
    	/* "dsh3000DAO.selectDsh3000MonthPrjGrpReqCntList" - [프로젝트 그룹별 차트] 월별 프로젝트 그룹별 요구사항 갯수 */
    	SELECT B.PRJ_GRP_ID, B.PRJ_ID, B.PRJ_NM,A.REQ_ED_DU_MM, A.REQ_MM_TOTAL_CNT, A.REQ_ED_MM_CNT, A.REQ_TOTAL_CNT
		FROM
		(
			SELECT 
				Y.PRJ_ID
				, Y.REQ_ED_DU_MM, COUNT(*) AS REQ_MM_TOTAL_CNT
				, COUNT(DECODE(Y.REQ_ED_RATIO_NUM,1,1)) AS REQ_ED_MM_CNT
                , SUM(COUNT(*)) OVER (PARTITION BY X.PRJ_GRP_ID, REQ_ED_DU_MM) AS REQ_TOTAL_CNT
		    FROM
		    (
		        SELECT Z.*, TO_CHAR(Z.REQ_ED_DU_DTM,'YYYY') AS REQ_ED_DU_YY, TO_CHAR(Z.REQ_ED_DU_DTM,'MM') AS REQ_ED_DU_MM,
		            CASE
		                WHEN Z.REQ_PRO_TYPE != '04' THEN -1
		                WHEN Z.REQ_ED_DU_DTM IS NULL THEN -1
		                WHEN Z.REQ_ED_DTM IS NULL THEN -1
		                <![CDATA[
		               		WHEN TO_DATE(TO_CHAR(COALESCE(Z.REQ_ED_DTM,CURRENT_TIMESTAMP),'YYYY-MM-DD'),'YYYY-MM-DD') <= TO_DATE(TO_CHAR(Z.REQ_ED_DU_DTM,'YYYY-MM-DD'),'YYYY-MM-DD') THEN 1
		               	]]>
		                ELSE 0 END AS REQ_ED_RATIO_NUM
		        FROM REQ4100 Z
		        WHERE 1=1
                AND Z.PROCESS_ID IS NOT NULL
                AND Z.REQ_PRO_TYPE != '05'
		    ) Y
		    INNER JOIN PRJ1000 X
		    ON ( Y.PRJ_ID = X.PRJ_ID )
		    GROUP BY X.PRJ_GRP_ID, Y.PRJ_ID, Y.REQ_ED_DU_MM
		) A
		INNER JOIN PRJ1000 B
		ON ( A.PRJ_ID = B.PRJ_ID AND B.LIC_GRP_ID = #licGrpId# AND A.REQ_ED_DU_MM IS NOT NULL)
		LEFT JOIN
		(            
                SELECT	Z.PRJ_ID
                    ,	Z.USR_ID
                FROM ADM1300 Z
                INNER JOIN ADM1100 X
                ON ( Z.PRJ_ID = X.PRJ_ID AND Z.AUTH_GRP_ID = X.AUTH_GRP_ID AND Z.USR_ID = #usrId#)
                WHERE	1=1
                GROUP BY Z.PRJ_ID, Z.USR_ID
    	) C
    	ON ( B.PRJ_ID = C.PRJ_ID )
		WHERE 1=1
    	AND (B.PRJ_GRP_ID IS NULL OR C.USR_ID IS NOT NULL)
		ORDER BY A.REQ_ED_DU_MM, B.ORD
    </select>  
    
	 <!-- [차트1] 프로젝트별 총갯수 + 최종 완료 갯수-->
    <select id="dsh3000DAO.selectDsh3000PrjReqCntList" parameterClass="java.util.Map" resultClass="egovMap">
    	/* dsh3000DAO.selectDsh3000PrjReqCntList - [차트1] 프로젝트별 총갯수 + 최종 완료 갯수 */
    		SELECT B.*, C.PRJ_NM
		    FROM
		    (
		    	SELECT	A.PRJ_ID
		    		, COUNT(*) AS ALL_CNT
		    		, COUNT(DECODE(A.REQ_PRO_TYPE,'04',1)) AS END_CNT
				FROM REQ4100 A
				WHERE 1=1
				AND A.PRJ_ID  IN (
	                	SELECT Y.PRJ_ID
	                    FROM PRJ1000 Y
	                    WHERE 1=1
	                    AND Y.PRJ_GRP_ID = #prjId#
	                )
				<![CDATA[
					AND A.REQ_PRO_TYPE <> '03'
					AND A.REQ_PRO_TYPE <> '05'
				]]>
	            AND A.PROCESS_ID IS NOT NULL
				GROUP BY A.PRJ_ID
		    ) B
		    INNER JOIN PRJ1000 C
		    ON ( B.PRJ_ID = C.PRJ_ID )
		    WHERE 1=1
		    AND (SELECT COUNT(*) FROM ADM1300 Z WHERE B.PRJ_ID = Z.PRJ_ID AND Z.USR_ID = #usrId#) > 0
		    ORDER BY C.ORD
    </select>   
    
    <!-- [차트2]  월별 프로젝트별 요구사항 갯수-->
    <select id="dsh3000DAO.selectDsh3000MonthPrjReqCntList" parameterClass="java.util.Map" resultClass="egovMap">
    	/* "dsh3000DAO.selectDsh3000MonthPrjReqCntList" - [차트2] 월별 프로젝트별 요구사항 갯수 */
    	SELECT A.*, B.PRJ_NM
		FROM
		(
			SELECT 
				Y.PRJ_ID
				, Y.REQ_ED_DU_MM, COUNT(*) AS REQ_MM_TOTAL_CNT
				, COUNT(DECODE(Y.REQ_ED_RATIO_NUM,1,1)) AS REQ_ED_MM_CNT
                , SUM(COUNT(*)) OVER (PARTITION BY REQ_ED_DU_MM) AS REQ_TOTAL_CNT
		    FROM
		    (
		        SELECT Z.*, TO_CHAR(Z.REQ_ED_DU_DTM,'YYYY') AS REQ_ED_DU_YY, TO_CHAR(Z.REQ_ED_DU_DTM,'MM') AS REQ_ED_DU_MM,
		            CASE
		                WHEN Z.REQ_PRO_TYPE != '04' THEN -1
		                WHEN Z.REQ_ED_DU_DTM IS NULL THEN -1
		                WHEN Z.REQ_ED_DTM IS NULL THEN -1
		                <![CDATA[
		               		WHEN Z.REQ_ED_DTM <= TO_DATE(TO_CHAR(Z.REQ_ED_DU_DTM,'YYYY-MM-DD'),'YYYY-MM-DD') THEN 1
		                ]]>
		                ELSE 0 END AS REQ_ED_RATIO_NUM
		        FROM REQ4100 Z
		        WHERE 1=1
		        AND Z.PRJ_ID IN (
                	SELECT Y.PRJ_ID
                    FROM PRJ1000 Y
                    WHERE 1=1
                    AND Y.PRJ_GRP_ID = #prjId#
                )
                AND Z.PROCESS_ID IS NOT NULL
                AND Z.REQ_PRO_TYPE != '05'
		    ) Y
		    WHERE 1=1
		    GROUP BY Y.PRJ_ID, Y.REQ_ED_DU_MM
		) A
		INNER JOIN PRJ1000 B
		ON ( A.PRJ_ID = B.PRJ_ID AND A.REQ_ED_DU_MM IS NOT NULL)
		WHERE 1=1
		AND (SELECT COUNT(*) FROM ADM1300 Z WHERE B.PRJ_ID = Z.PRJ_ID AND Z.USR_ID = #usrId#) > 0
		ORDER BY A.REQ_ED_DU_MM, B.ORD
    </select>   
    
    <!-- [프로젝트별 차트] 프로세스별 요구사항 총갯수 + 최종 완료 갯수-->
    <select id="dsh3000DAO.selectDsh3000PrjProcessReqCntList" parameterClass="java.util.Map" resultClass="egovMap">
    	/* "dsh3000DAO.selectDsh3000PrjProcessReqCntList" - [프로젝트별 차트] 프로세스별 요구사항 총갯수 + 최종 완료 갯수 */
    	SELECT D.*,E.PRJ_NM
		FROM
		(
		 	 SELECT
		          A.PRJ_ID
		            , COALESCE(A.PROCESS_ID,'request') AS PROCESS_ID
		            , COALESCE(C.PROCESS_NM,'접수 대기') AS PROCESS_NM
		            , COUNT(*) AS ALL_CNT
		            , COUNT(DECODE(A.REQ_PRO_TYPE,'04',1)) AS END_CNT
		            , C.PROCESS_ORD
		        FROM REQ4100 A
		        LEFT JOIN FLW1100 B
		        ON ( A.PRJ_ID = B.PRJ_ID AND A.PROCESS_ID = B.PROCESS_ID AND A.FLOW_ID = B.FLOW_ID)
		        LEFT JOIN FLW1000 C
		        ON ( B.PRJ_ID = C.PRJ_ID AND B.PROCESS_ID = C.PROCESS_ID)
		        WHERE 1=1
	            AND A.PRJ_ID  IN (
	                            SELECT Y.PRJ_ID
	                            FROM PRJ1000 Y
	                            WHERE 1=1
	                            AND Y.PRJ_GRP_ID = #prjId#
	                        )
	             <![CDATA[
	            AND A.REQ_PRO_TYPE <> '03'
	            AND A.REQ_PRO_TYPE <> '05'
	            ]]>
		        GROUP BY A.PRJ_ID, A.PROCESS_ID, C.PROCESS_NM, C.PROCESS_ORD
		) D
		INNER JOIN PRJ1000 E
		ON ( D.PRJ_ID = E.PRJ_ID )
		WHERE 1=1
		AND (SELECT COUNT(*) FROM ADM1300 Z WHERE D.PRJ_ID = Z.PRJ_ID AND Z.USR_ID = #usrId#) > 0
		ORDER BY E.ORD, COALESCE(D.PROCESS_ORD, -1),D.PROCESS_ID NULLS FIRST
    </select> 
    
     <!-- [프로젝트별 차트]  월별 프로세스별 요구사항 갯수-->
    <select id="dsh3000DAO.selectDsh3000MonthPrjProcessReqCntList" parameterClass="java.util.Map" resultClass="egovMap">
    	/* dsh3000DAO.selectDsh3000MonthPrjProcessReqCntList - [프로젝트별 차트]  월별 프로세스별 요구사항 갯수 */
    	SELECT C.*, D.PRJ_NM
		FROM
		(
			SELECT A.*, B.PROCESS_NM, B.PROCESS_ORD
				FROM
				(
					SELECT 
						Y.PRJ_ID
						, Y.PROCESS_ID
						, Y.REQ_ED_DU_MM, COUNT(*) AS REQ_MM_TOTAL_CNT
						, COUNT(DECODE(Y.REQ_ED_RATIO_NUM,1,1)) AS REQ_ED_MM_CNT
		                , SUM(COUNT(*)) OVER (PARTITION BY PRJ_ID, REQ_ED_DU_MM) AS REQ_TOTAL_CNT
				    FROM
				    (
				        SELECT Z.*, TO_CHAR(Z.REQ_ED_DU_DTM,'YYYY') AS REQ_ED_DU_YY, TO_CHAR(Z.REQ_ED_DU_DTM,'MM') AS REQ_ED_DU_MM,
				            CASE
				                WHEN Z.REQ_PRO_TYPE != '04' THEN -1
				                WHEN Z.REQ_ED_DU_DTM IS NULL THEN -1
				                WHEN Z.REQ_ED_DTM IS NULL THEN -1
				                <![CDATA[
				                WHEN TO_DATE(TO_CHAR(COALESCE(Z.REQ_ED_DTM,CURRENT_TIMESTAMP),'YYYY-MM-DD'),'YYYY-MM-DD') <= TO_DATE(TO_CHAR(Z.REQ_ED_DU_DTM,'YYYY-MM-DD'),'YYYY-MM-DD') THEN 1
				                ]]>
				                ELSE 0 END AS REQ_ED_RATIO_NUM
				        FROM REQ4100 Z
				        WHERE 1=1
				       	AND Z.PRJ_ID  IN (
		                            SELECT Y.PRJ_ID
		                            FROM PRJ1000 Y
		                            WHERE 1=1
		                            AND Y.PRJ_GRP_ID = #prjId#
		                        )
		              	AND Z.PROCESS_ID IS NOT NULL
		                AND Z.REQ_PRO_TYPE != '05'
				    ) Y
				    WHERE 1=1
				    GROUP BY Y.PRJ_ID, Y.PROCESS_ID, Y.REQ_ED_DU_MM
				) A
				LEFT JOIN FLW1000 B
				ON ( A.PRJ_ID = B.PRJ_ID AND A.PROCESS_ID = B.PROCESS_ID)
				WHERE 1=1
				AND A.REQ_ED_DU_MM IS NOT NULL
		) C
		INNER JOIN PRJ1000 D
		ON ( C.PRJ_ID = D.PRJ_ID )
		WHERE 1=1
		AND (SELECT COUNT(*) FROM ADM1300 Z WHERE C.PRJ_ID = Z.PRJ_ID AND Z.USR_ID = #usrId#) > 0
		ORDER BY C.REQ_ED_DU_MM, D.ORD, C.PROCESS_ORD
    </select>     
    
	<!-- 대시보드 프로젝트별 기간 비교 경고-->
	<!--
	종료일 없음
	01 - 그린
	02 - 주황
	03 - 레드
	
	종료일 있음
	04 - 레드(채도 DOWN)
	05 - 파랑 
	-->
	<select id="dsh3000DAO.selectDsh3000PrjReqDtmOverAlertList" parameterClass="java.util.Map" resultClass="egovMap">
		/* dsh3000DAO.selectDsh3000PrjReqDtmOverAlertList - 대시보드  프로젝트별 기간 비교 경고 */
		<![CDATA[
			SELECT B.PRJ_ID, B.OVER_TYPE, COUNT(*) AS OVER_CNT
			FROM
			(
				SELECT 
                	CASE A.REQ_PRO_TYPE WHEN '04' THEN
                		CASE WHEN DATE_FORMAT(A.REQ_ED_DU_DTM,'%Y-%m-%d 23:59') < COALESCE(A.REQ_ED_DTM,CURRENT_TIMESTAMP) THEN '04'
		                ELSE '05' END 
		            ELSE
		            	CASE WHEN DATE_FORMAT(A.REQ_ED_DU_DTM,'%Y-%m-%d 23:59') < COALESCE(A.REQ_ED_DTM,CURRENT_TIMESTAMP)  THEN '03'
                        	WHEN DATE_FORMAT(ADDDATE(A.REQ_ED_DU_DTM,INTERVAL -3 DAY),'%Y-%m-%d 23:59') < COALESCE(A.REQ_ED_DTM,CURRENT_TIMESTAMP) THEN '02'
                        ELSE '01' END 
		            END	AS OVER_TYPE
			        ,A.PRJ_ID
			    FROM REQ4100 A
			    WHERE 1=1
			    AND A.REQ_PRO_TYPE != '01'
			    AND A.REQ_PRO_TYPE != '05'
			    AND A.PROCESS_ID IS NOT NULL
			    AND A.PRJ_ID  IN (
                            SELECT Y.PRJ_ID
                            FROM PRJ1000 Y
                            WHERE 1=1
                            AND Y.PRJ_GRP_ID = #prjId#
                        )
			) B
			GROUP BY B.PRJ_ID, B.OVER_TYPE
			ORDER BY B.PRJ_ID, B.OVER_TYPE
		]]>
	</select>
    
	<!-- 대시보드 프로젝트 그룹별 기간 비교 경고-->
	<select id="dsh3000DAO.selectDsh3000PrjGrpReqDtmOverAlertList" parameterClass="java.util.Map" resultClass="egovMap">
		/* dsh3000DAO.selectDsh3000PrjGrpReqDtmOverAlertList - 대시보드 프로젝트 그룹별 기간 비교 경고 */
		<![CDATA[
			SELECT D.PRJ_GRP_ID AS PRJ_ID, C.OVER_TYPE, SUM(C.OVER_CNT) AS OVER_CNT
			FROM
			(
				SELECT B.PRJ_ID, B.OVER_TYPE, COUNT(*) AS OVER_CNT
						FROM
						(
							SELECT 
			                	CASE A.REQ_PRO_TYPE WHEN '04' THEN
			                		CASE WHEN DATE_FORMAT(A.REQ_ED_DU_DTM,'%Y-%m-%d 23:59') < COALESCE(A.REQ_ED_DTM,CURRENT_TIMESTAMP) THEN '04'
					                ELSE '05' END 
					            ELSE
					            	CASE WHEN DATE_FORMAT(A.REQ_ED_DU_DTM,'%Y-%m-%d 23:59') < COALESCE(A.REQ_ED_DTM,CURRENT_TIMESTAMP)  THEN '03'
			                        	WHEN DATE_FORMAT(ADDDATE(A.REQ_ED_DU_DTM,INTERVAL -3 DAY),'%Y-%m-%d 23:59') < COALESCE(A.REQ_ED_DTM,CURRENT_TIMESTAMP) THEN '02'
			                        ELSE '01' END 
					            END	AS OVER_TYPE
						        ,A.PRJ_ID
						    FROM REQ4100 A
						    WHERE 1=1
						    AND A.REQ_PRO_TYPE != '01'
						    AND A.REQ_PRO_TYPE != '05'
						    AND A.PROCESS_ID IS NOT NULL
						) B
						GROUP BY B.PRJ_ID, B.OVER_TYPE
			) C
			INNER JOIN PRJ1000 D
			ON ( C.PRJ_ID = D.PRJ_ID AND D.LIC_GRP_ID = #licGrpId#)
            LEFT JOIN
            (            
                SELECT	Z.PRJ_ID
                    ,	Z.USR_ID
                FROM	ADM1300 Z
                INNER JOIN ADM1100 X
                ON ( Z.PRJ_ID = X.PRJ_ID AND Z.AUTH_GRP_ID = X.AUTH_GRP_ID AND Z.USR_ID = #usrId#)
                GROUP BY Z.PRJ_ID, Z.USR_ID
            ) E
            ON ( D.PRJ_ID = E.PRJ_ID )
			WHERE 1=1
            AND (D.PRJ_GRP_ID IS NULL OR E.USR_ID IS NOT NULL)
			GROUP BY D.PRJ_GRP_ID, C.OVER_TYPE
			ORDER BY D.PRJ_GRP_ID, C.OVER_TYPE
		]]>
	</select>

	 
	<!-- 통합대시보드 : 통합데이터, 프로젝트 그룹별 신호등, 차트 클릭 시 요구사항 목록 조회 -->
	<sql id="selectDsh3000ReqList">
		<![CDATA[
		SELECT T2.*
		FROM
		(
			SELECT
				ROWNUM RN ,
				T1.PRJ_ID ,
		        T1.REQ_ID ,
		        T1.REQ_ORD ,
		        T1.REQ_CLS_ID ,
		        T1.REQ_NO ,
		        T1.REQ_USR_ID ,
		        T1.REQ_DTM ,
		        T1.REQ_USR_DEPT_NM ,
		        T1.REQ_USR_EMAIL ,
		        T1.REQ_USR_NUM ,
		        T1.REQ_NM ,
		        SF_REPLACE_ALL(T1.REQ_DESC,'</br>|<br>|<br/>|</BR>|<BR>|<BR/>' , '' ) AS REQ_DESC ,
		        T1.REQ_CHARGER_ID ,
		        T1.REQ_COMPLETE_RATIO ,
		        T1.REQ_FP ,
		        T1.REQ_EX_FP ,
		        T1.REQ_CHARGER_NM ,
		        T1.REQ_ST_DTM ,
		        T1.REQ_ED_DTM ,
		        T1.REQ_ST_DU_DTM ,
		        T1.REQ_ED_DU_DTM ,
		        T1.REQ_PRO_TYPE ,
		        T1.REQ_NEW_TYPE ,
		        T1.REQ_ACCEPT_TXT ,
		        T1.SCL_CD ,
		        T1.REQ_TYPE_CD ,
		        T1.PIA_CD ,
		        T1.LAB_INP ,
		        T1.ATCH_FILE_ID ,
		        T1.CB_ATCH_FILE_ID ,
		        T1.MILESTONE_ID ,
		        T1.PROCESS_ID ,
		        T1.PROCESS_NM ,
		        T1.FLOW_ID ,
		        T1.FLOW_NM ,
		        T1.FLOW_NEXT_ID ,
		        T1.USE_CD ,
		        T1.REG_DTM ,
		        T1.REG_DTM_DAY ,
		        T1.REG_USR_ID ,
		        T1.REG_USR_IP ,
		        T1.MODIFY_DTM ,
		        T1.MODIFY_USR_ID ,
		        T1.MODIFY_USR_IP ,
		        T1.ORG_REQ_ID ,
				T1.LIC_GRP_ID ,
				T1.PRJ_NM ,
				T1.PRJ_GRP_ID ,
				(SELECT PRJ_NM FROM PRJ1000 WHERE 1=1 AND PRJ_ID = T1.PRJ_GRP_ID) AS PRJ_GRP_NM ,
				TO_NUMBER(IFNULL(SF_REPLACE_ALL(T1.REQ_ORD ,'[^0-9]',''),0)) AS REQ_ORD_NUMBER ,
				COALESCE(SF_REQ4000_REQ_CLS_NM(T1.PRJ_ID, T1.REQ_CLS_ID, '2'), '') AS REQ_CLS_NM ,
				COALESCE(T1.REQ_USR_NM, ( SELECT USR_NM FROM ADM2000 WHERE USR_ID = T1.REQ_USR_ID))  AS REQ_USR_NM ,
				( SELECT SUB_CD_NM FROM ADM4100 WHERE LIC_GRP_ID = #licGrpId# AND MST_CD = 'REQ00008' AND SUB_CD = T1.REQ_PRO_TYPE ) AS REQ_PRO_TYPE_NM , 
				( SELECT SUB_CD_NM FROM ADM4100 WHERE LIC_GRP_ID = #licGrpId# AND MST_CD = 'REQ00011' AND SUB_CD = T1.SCL_CD ) AS SCL_NM , 
				( SELECT SUB_CD_NM FROM ADM4100 WHERE LIC_GRP_ID = #licGrpId# AND MST_CD = 'REQ00012' AND SUB_CD = T1.REQ_TYPE_CD ) AS REQ_TYPE_NM ,
				( SELECT SUB_CD_NM FROM ADM4100 WHERE LIC_GRP_ID = #licGrpId# AND MST_CD = 'CMM00001' AND SUB_CD = T1.PIA_CD ) AS PIA_NM ,
				( SELECT SUB_CD_NM FROM ADM4100 WHERE LIC_GRP_ID = #licGrpId# AND MST_CD = 'REQ00009' AND SUB_CD = T1.REQ_NEW_TYPE ) AS REQ_NEW_TYPE_NM
			FROM
			(
				SELECT  
					E.LIC_GRP_ID ,
					A.PRJ_ID ,
					E.PRJ_NM ,
					E.PRJ_GRP_ID ,
			        A.REQ_ID ,
			        A.REQ_ORD ,
			        A.REQ_CLS_ID ,
			        A.REQ_NO ,
			        A.REQ_USR_ID ,
			        A.REQ_USR_NM ,
			        TO_CHAR(A.REQ_DTM, 'YYYY-MM-DD')                          AS REQ_DTM ,
			        A.REQ_USR_DEPT_NM ,
			        A.REQ_USR_EMAIL ,
			        A.REQ_USR_NUM ,
			        A.REQ_NM ,
					A.REQ_DESC,
			        A.REQ_CHARGER_ID ,
			        A.REQ_COMPLETE_RATIO ,
			        A.REQ_FP ,
			        A.REQ_EX_FP ,
			        D.USR_NM AS REQ_CHARGER_NM ,
			        IFNULL(TO_CHAR(A.REQ_ST_DTM, 'YYYY-MM-DD HH24:MI') , '') REQ_ST_DTM ,
			        IFNULL(TO_CHAR(A.REQ_ED_DTM, 'YYYY-MM-DD HH24:MI') , '') REQ_ED_DTM ,
			        IFNULL(TO_CHAR(A.REQ_ST_DU_DTM, 'YYYY-MM-DD') , '') REQ_ST_DU_DTM ,
			        IFNULL(TO_CHAR(A.REQ_ED_DU_DTM, 'YYYY-MM-DD') , '') REQ_ED_DU_DTM ,
			        A.REQ_PRO_TYPE ,
			        A.REQ_NEW_TYPE ,
			        A.REQ_ACCEPT_TXT ,
			        A.SCL_CD ,
			        A.REQ_TYPE_CD ,
			        A.PIA_CD ,
			        A.LAB_INP ,
			        A.ATCH_FILE_ID ,
			        A.CB_ATCH_FILE_ID ,
			        A.MILESTONE_ID ,
			        A.PROCESS_ID ,
			        B.PROCESS_NM ,
			        A.FLOW_ID ,
			        C.FLOW_NM ,
			        C.FLOW_NEXT_ID ,
			        A.USE_CD ,
			        TO_CHAR(A.REG_DTM, 'YYYY-MM-DD HH24:MI:SS') AS REG_DTM ,
			        TO_CHAR(A.REG_DTM, 'YYYY-MM-DD')            AS REG_DTM_DAY ,
			        A.REG_USR_ID ,
			        A.REG_USR_IP ,
			        TO_CHAR(A.MODIFY_DTM, 'YYYY-MM-DD HH24:MI:SS') AS MODIFY_DTM ,
			        A.MODIFY_USR_ID ,
			        A.MODIFY_USR_IP ,
			        A.ORG_REQ_ID
				FROM REQ4100 A
				LEFT JOIN FLW1000 B
				ON ( A.PRJ_ID = B.PRJ_ID AND A.PROCESS_ID = B.PROCESS_ID)
				LEFT JOIN FLW1100 C
				ON ( A.PRJ_ID = C.PRJ_ID AND A.PROCESS_ID = C.PROCESS_ID AND A.FLOW_ID = C.FLOW_ID)
				LEFT JOIN ADM2000 D
				ON ( A.REQ_CHARGER_ID = D.USR_ID )
				INNER JOIN PRJ1000 E
				ON ( A.PRJ_ID = E.PRJ_ID  )
				LEFT JOIN
				(            
		                SELECT	Z.PRJ_ID
		                    ,	Z.USR_ID
		                FROM ADM1300 Z
		                INNER JOIN ADM1100 X
		                ON ( Z.PRJ_ID = X.PRJ_ID AND Z.AUTH_GRP_ID = X.AUTH_GRP_ID AND Z.USR_ID = #usrId#)
		                GROUP BY Z.PRJ_ID, Z.USR_ID
		        ) F
		        ON ( A.PRJ_ID = F.PRJ_ID )
				WHERE 1 = 1
				AND A.REQ_PRO_TYPE != '05'
				]]>
				<isNotEqual property="prjId" compareValue="all">
					<isNotEmpty property="prjId">
					/* 프로젝트 그룹 차트 클릭 시 요구사항 목록 조회 조건 */
					AND      A.PRJ_ID  IN ( SELECT Y.PRJ_ID FROM PRJ1000 Y WHERE 1=1 AND Y.PRJ_GRP_ID = #prjId#)
					</isNotEmpty>
				</isNotEqual>
				<isNotEmpty property="reqProType">
				AND       A.REQ_PRO_TYPE     =	#reqProType#
				</isNotEmpty>
				<isNotEmpty property="projectMonth">
				/* 통합대시보드 프로젝트 그룹 선택 시 : 각 프로제트별 처리율(월) 요구사항 목록 조건 */
				AND		TO_CHAR(A.REQ_ED_DU_DTM ,'YYYYMM') = TO_CHAR(CURRENT_TIMESTAMP ,'YYYY') || #projectMonth#
				AND		DATE_FORMAT(A.REQ_ED_DU_DTM,'%Y-%m-%d 23:59') >= A.REQ_ED_DTM /* 작업종료 예정일자가 실제 작업종료일자보다 크거나 같아야함 */
				AND		A.REQ_PRO_TYPE = '04'	/* 최종완료인 요구사항 */
				</isNotEmpty>
				<isNotEmpty property="projectStartMonth">
				/* 통합대시보드 프로젝트 그룹 선택 시 : 분기별 처리율 요구사항 목록 조건 */
				AND		TO_CHAR(A.REQ_ED_DU_DTM ,'YYYYMM')    BETWEEN 	TO_CHAR(CURRENT_TIMESTAMP ,'YYYY') || #projectStartMonth#  AND TO_CHAR(CURRENT_TIMESTAMP ,'YYYY') || #projectEndMonth#
				AND		DATE_FORMAT(A.REQ_ED_DU_DTM,'%Y-%m-%d 23:59') >= A.REQ_ED_DTM /* 작업종료 예정일자가 실제 작업종료일자보다 크거나 같아야함 */
				AND		A.REQ_PRO_TYPE = '04'	/* 최종완료인 요구사항 */
				</isNotEmpty>
				<!-- 통합대시보드(dsh3000)에서 프로젝트 그룹별 요구사항 수 차트 또는 프로젝트별 요구사항 수 차트 클릭 시  chartType 값 넘겨줌 -->	
				<isNotEmpty property="chartType">
					<![CDATA[
					AND A.REQ_PRO_TYPE <> '03'
			   		AND A.PROCESS_ID IS NOT NULL
			   		]]>
				</isNotEmpty>	
				<isNotEmpty property="overType">
					<isEqual property="overType" compareValue="01" >
						/* 여유 요구사항 */
						<![CDATA[
						AND A.REQ_PRO_TYPE != '04'
						AND ( A.REQ_ED_DU_DTM  IS NULL OR DATE_FORMAT(A.REQ_ED_DU_DTM,'%Y-%m-%d 23:59') >= COALESCE(A.REQ_ED_DTM,CURRENT_TIMESTAMP) )
						AND ( A.REQ_ED_DU_DTM  IS NULL OR DATE_FORMAT(ADDDATE(A.REQ_ED_DU_DTM,INTERVAL -3 DAY),'%Y-%m-%d 23:59') >= COALESCE(A.REQ_ED_DTM,CURRENT_TIMESTAMP) )
						]]>
					</isEqual>
					<isEqual property="overType" compareValue="02" >
						/* 임박 요구사항 */
						<![CDATA[
						AND A.REQ_PRO_TYPE != '04'
						AND A.REQ_ED_DU_DTM IS NOT NULL
						AND DATE_FORMAT(A.REQ_ED_DU_DTM,'%Y-%m-%d 23:59') >= COALESCE(A.REQ_ED_DTM,CURRENT_TIMESTAMP)
						AND DATE_FORMAT(ADDDATE(A.REQ_ED_DU_DTM,INTERVAL -3 DAY),'%Y-%m-%d 23:59') < COALESCE(A.REQ_ED_DTM,CURRENT_TIMESTAMP)
						]]>
					</isEqual>
					<isEqual property="overType" compareValue="03" >
						/* 초과 요구사항 */
						<![CDATA[
						AND A.REQ_PRO_TYPE != '04'
						AND A.REQ_ED_DU_DTM  IS NOT NULL
						AND DATE_FORMAT(A.REQ_ED_DU_DTM,'%Y-%m-%d 23:59') < COALESCE(A.REQ_ED_DTM,CURRENT_TIMESTAMP) 
						]]>
					</isEqual>
					<isEqual property="overType" compareValue="04" >
						/* 실패 요구사항 */
						<![CDATA[
						AND A.REQ_PRO_TYPE = '04' 
						AND DATE_FORMAT(A.REQ_ED_DU_DTM,'%Y-%m-%d 23:59') < COALESCE(A.REQ_ED_DTM,CURRENT_TIMESTAMP)
						]]>
					</isEqual>
					<isEqual property="overType" compareValue="05" >
						/* 적기 요구사항 */
						<![CDATA[
						AND A.REQ_PRO_TYPE = '04' 
						AND DATE_FORMAT(A.REQ_ED_DU_DTM,'%Y-%m-%d 23:59') >= COALESCE(A.REQ_ED_DTM,CURRENT_TIMESTAMP)
						]]>
					</isEqual>
					 AND A.REQ_PRO_TYPE != '01'
					 AND A.PROCESS_ID IS NOT NULL
				</isNotEmpty>
				AND (E.PRJ_GRP_ID IS NULL OR F.USR_ID IS NOT NULL)
		        AND E.LIC_GRP_ID = #licGrpId#
		        <isNotEmpty property="chartType">
					<!-- 통합대시보드(dsh3000)에서 프로젝트별 요구사항 수 차트 클릭 시  prjReqChart 값 넘겨줌 -->
					<isEqual property="chartType" compareValue="prjReqChart" >
						 AND E.PRJ_NM = (SELECT PRJ_NM FROM PRJ1000 WHERE 1=1 AND PRJ_GRP_ID = #prjGrpId# AND PRJ_NM = #prjNm#) 
					</isEqual>
				</isNotEmpty>
			) T1
		) T2
		ORDER BY T2.PRJ_GRP_NM, T2.PRJ_NM, T2.REQ_ORD_NUMBER DESC
	</sql>
	
	
	<!-- 통합대시보드 : 통합데이터, 프로젝트 그룹별 신호등, 차트 클릭 시 요구사항 목록 조회   -->
	<select id="dsh3000DAO.selectDsh3000ReqList" parameterClass="dsh3000VO" resultClass="egovMap">
			/* dsh3000DAO.selectDsh3000ReqList - 통합대시보드 : 통합데이터, 프로젝트 그룹별 신호등, 차트 클릭 시 요구사항 목록 조회  */
			SELECT 
				T4.*
			FROM ( 
			<include refid="selectDsh3000ReqList"/>
			) T4
			WHERE T4.RN BETWEEN (#firstIndex#+1) AND #lastIndex#
	</select>
	
	<!-- 신호등(초과, 임박, 여유, 실패, 적기별), 프로세스별 요구사항 목록 총 건수 조회 : 그리드 페이징 -->
    <select id="dsh3000DAO.selectDsh3000ReqListCnt" parameterClass="dsh3000VO"  resultClass="java.lang.Integer">
	    /* dsh3000DAO.selectDsh3000ReqListCnt - 통합대시보드 : 통합데이터, 프로젝트 그룹별 신호등, 차트 클릭 시 요구사항 목록 조회 */
	    SELECT
			COUNT(*)
		FROM	(
			<include refid="selectDsh3000ReqList"/>
		) T4
    </select>
	
</sqlMap>