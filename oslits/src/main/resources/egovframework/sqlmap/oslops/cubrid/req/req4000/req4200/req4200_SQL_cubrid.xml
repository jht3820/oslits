<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="req4200DAO">

 	<typeAlias alias="req4200VO" type="kr.opensoftlab.oslops.req.req4000.req4200.vo.Req4200VO"/>
	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>

	<!-- Map Define -->
   	<resultMap id="resultMapSelectReq4200" class="req4200VO">
		<result property="rn"  					column="RN"/>
		<result property="prjId"				column="PRJ_ID"/>				<!-- 프로젝트 ID -->
		<result property="reqOrd"				column="REQ_ORD"/> 				<!-- 요구사항 순번 -->
		<result property="reqId"				column="REQ_ID"/>				<!-- 요구사항 ID -->
		<result property="reqClsId"				column="REQ_CLS_ID"/>			<!-- 요구사항 분류 ID -->
		<result property="reqClsNm"				column="REQ_CLS_NM"/>			<!-- 요구사항 분류 명 -->
		<result property="reqNo"				column="REQ_NO"/>				<!-- 공문번호 -->
		<result property="reqUsrId"				column="REQ_USR_ID"/> 			<!-- 요청자 ID -->
		<result property="reqUsrNm"				column="REQ_USR_NM"/>			<!-- 요청자 명 -->
		<result property="reqDtm"				column="REQ_DTM"/>				<!-- 요청일 -->
		<result property="reqUsrDeptNm"			column="REQ_USR_DEPT_NM"/>		<!-- 요청자 소속 -->
		<result property="reqUsrEmail"			column="REQ_USR_EMAIL"/>		<!-- 요청자 이메일 -->
		<result property="reqUsrNum"			column="REQ_USR_NUM"/>			<!-- 요청자 연락처 -->
		<result property="reqNm"				column="REQ_NM"/>				<!-- 요구사항 명 -->
		<result property="reqDesc"				column="REQ_DESC"/>				<!-- 요구사항 설명 -->
		<result property="reqChargerId"			column="REQ_CHARGER_ID"/>		<!-- 담당자 ID -->
		<result property="reqChargerNm"			column="REQ_CHARGER_NM"/>		<!-- 담당자 명 -->
		<result property="reqCompleteRatio"		column="REQ_COMPLETE_RATIO"/>	<!-- 진척률 -->
		<result property="reqExFp"				column="REQ_EX_FP"/>			<!-- 요구사항 예상 FP -->
		<result property="reqFp"				column="REQ_FP"/>				<!-- 요구사항 FP -->
		<result property="reqStDtm"				column="REQ_ST_DTM"/>			<!-- 작업 시작일자 -->
		<result property="reqEdDtm"				column="REQ_ED_DTM"/>			<!-- 작업 종료일자 -->
		<result property="reqStDuDtm"			column="REQ_ST_DU_DTM"/>		<!-- 작업 시작 예정일자 -->
		<result property="reqEdDuDtm"			column="REQ_ED_DU_DTM"/>		<!-- 작업 종료 예정일자 -->
		<result property="reqProType"			column="REQ_PRO_TYPE"/>			<!-- 처리 유형 코드 -->
		<result property="reqProTypeNm"			column="REQ_PRO_TYPE_NM"/>		<!-- 처리유형 명 -->
		<result property="reqNewType"			column="REQ_NEW_TYPE"/>			<!-- 접수유형 코드 -->
		<result property="reqNewTypeNm"			column="REQ_NEW_TYPE_NM"/>		<!-- 접수유형 명 -->
		<result property="sclCd"				column="SCL_CD"/>				<!-- 시스템 구분 코드 -->
		<result property="sclNm"				column="SCL_NM"/>				<!-- 시스템 구분 명 -->
		<result property="reqTypeCd"			column="REQ_TYPE_CD"/>			<!-- 요구사항 유형 코드 -->
		<result property="reqTypeNm"			column="REQ_TYPE_NM"/>			<!-- 요구사항 유형 명 -->
		<result property="piaCd"				column="PIA_CD"/>				<!-- 성능 개선활동 여부 코드 -->
		<result property="piaNm"				column="PIA_NM"/>				<!-- 성능 개선활동 여부 명 -->
		<result property="labInp"				column="LAB_INP"/>				<!-- 투입인력 -->
		<result property="atchFileId"			column="ATCH_FILE_ID"/>			<!-- 첨부파일 ID -->
		<result property="cbAtchFileId"			column="CB_ATCH_FILE_ID"/>		<!-- 클립보드 파일 ID -->
		<result property="milestoneId"			column="MILESTONE_ID"/>			<!-- 마일스톤 ID -->
		<result property="processId"			column="PROCESS_ID"/>			<!-- 프로세스 ID -->
		<result property="processNm"			column="PROCESS_NM"/>			<!-- 프로세스 명 -->
		<result property="flowId"				column="FLOW_ID"/>				<!-- 작업흐름 ID -->
		<result property="flowNm"				column="FLOW_NM"/>				<!-- 작업흐름 명 -->
		<result property="useCd"				column="USE_CD"/>				<!-- 사용여부 -->
		<result property="orgReqId"				column="ORG_REQ_ID"/>			<!-- 체계별 요구사항 ID -->
		<result property="regDtm"				column="REG_DTM"/>				<!-- 최초등록일시 -->
		<result property="regUsrId"				column="REG_USR_ID"/>			<!-- 최초등록자 ID -->
		<result property="regUsrIp"				column="REG_USR_IP"/>			<!-- 최초등록자 IP -->
		<result property="modifyDtm"			column="MODIFY_DTM"/>			<!-- 최종수정일시 -->
		<result property="modifyUsrId"			column="MODIFY_USR_ID"/>		<!-- 최종수정자 ID -->
		<result property="modifyUsrIp"			column="MODIFY_USR_IP"/>		<!-- 최종수정자 IP -->
    </resultMap>


	<sql id="req4200DAO.selectReq4100List">
		SELECT 
				T2.*
		FROM
		(
			SELECT
					T1.PRJ_ID
				, 	T1.REQ_ORD
				,	TO_NUMBER(IFNULL(SF_REPLACE_ALL(T1.REQ_ORD ,'[^0-9]',''),0)) AS REQ_ORD_NUMBER
				,	T1.REQ_ID
				,	T1.REQ_CLS_ID
				,	COALESCE(SF_REQ4000_REQ_CLS_NM(T1.PRJ_ID, T1.REQ_CLS_ID, '2'), '') AS REQ_CLS_NM
				,	T1.REQ_NO
				,	T1.REQ_USR_ID
				,	COALESCE(T1.REQ_USR_NM, SF_ADM2000_USR_INFO(T1.REQ_USR_ID, '1'))  AS REQ_USR_NM
				,	T1.REQ_DTM
				,	T1.REQ_USR_DEPT_NM
				,	T1.REQ_USR_EMAIL
				,	T1.REQ_USR_NUM
				,	T1.REQ_NM
				<![CDATA[ 
		    	,	SF_REPLACE_ALL(T1.REQ_DESC ,'</br>|<br>|<br/>|</BR>|<BR>|<BR/>' , '' ) AS REQ_DESC  
		    	]]>  
				,	T1.REQ_CHARGER_ID
				,	T1.REQ_CHARGER_NM
				, 	T1.REQ_COMPLETE_RATIO
				,	T1.REQ_EX_FP
				,	T1.REQ_FP
				, 	T1.REQ_ST_DTM
		    	, 	T1.REQ_ED_DTM
				,	T1.REQ_ST_DU_DTM
				,	T1.REQ_ED_DU_DTM
				,	T1.REQ_PRO_TYPE
				,	SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00008', T1.REQ_PRO_TYPE, '1') AS REQ_PRO_TYPE_NM
				,	T1.REQ_NEW_TYPE
				,	SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00009', T1.REQ_NEW_TYPE, '1') AS REQ_NEW_TYPE_NM
				,	T1.REQ_TYPE_CD
				,	SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00012', T1.REQ_TYPE_CD, '1') AS REQ_TYPE_NM
				,	T1.SCL_CD
				,	SF_ADM4100_COM_CD_INFO(#licGrpId#, 'REQ00011', T1.SCL_CD, '1') AS SCL_NM
				,	T1.PIA_CD
				,	SF_ADM4100_COM_CD_INFO(#licGrpId#, 'CMM00001', T1.PIA_CD, '1') AS PIA_NM
				,	T1.LAB_INP
				,	T1.ATCH_FILE_ID
				,	T1.CB_ATCH_FILE_ID
				,	T1.MILESTONE_ID
				,	T1.PROCESS_ID
				,	T1.PROCESS_NM
				,	T1.FLOW_ID
				,	T1.FLOW_NM
				,	T1.USE_CD
				,	T1.ORG_REQ_ID
				,	T1.REG_DTM
				,	T1.REG_USR_ID
				,	T1.REG_USR_IP
				,	T1.MODIFY_DTM
				,	T1.MODIFY_USR_ID
				,	T1.MODIFY_USR_IP
				,	ROWNUM RN
			FROM
			(
				SELECT
						A.PRJ_ID
					, 	A.REQ_ORD
					,	A.REQ_ID
					,	A.REQ_CLS_ID
					,	A.REQ_NO
					,	A.REQ_USR_ID
					,	A.REQ_USR_NM
					,	TO_CHAR(A.REQ_DTM, 'YYYY-MM-DD HH24:MI:SS') AS REQ_DTM
					,	A.REQ_USR_DEPT_NM
					,	A.REQ_USR_EMAIL
					,	A.REQ_USR_NUM
					,	A.REQ_NM
		    		,	A.REQ_DESC
					,	A.REQ_CHARGER_ID
					,	D.USR_NM AS REQ_CHARGER_NM
					, 	A.REQ_COMPLETE_RATIO
					,	A.REQ_EX_FP
					,	A.REQ_FP
					, 	IFNULL(TO_CHAR(A.REQ_ST_DTM, 'YYYY-MM-DD HH24:MI') , '') REQ_ST_DTM
		    		, 	IFNULL(TO_CHAR(A.REQ_ED_DTM, 'YYYY-MM-DD HH24:MI') , '') REQ_ED_DTM
					, 	IFNULL(TO_CHAR(A.REQ_ST_DU_DTM, 'YYYY-MM-DD') , '') REQ_ST_DU_DTM
					, 	IFNULL(TO_CHAR(A.REQ_ED_DU_DTM, 'YYYY-MM-DD') , '') REQ_ED_DU_DTM
					,	A.REQ_PRO_TYPE
					,	A.REQ_NEW_TYPE
					,	A.REQ_TYPE_CD
					,	A.SCL_CD
					,	A.PIA_CD
					,	A.LAB_INP
					,	A.ATCH_FILE_ID
					,	A.CB_ATCH_FILE_ID
					,	A.MILESTONE_ID
					,	A.PROCESS_ID
					,	B.PROCESS_NM
					,	A.FLOW_ID
					,	C.FLOW_NM
					,	A.USE_CD
					,	A.ORG_REQ_ID
					,	TO_CHAR(A.REG_DTM, 'YYYY-MM-DD HH24:MI:SS') AS REG_DTM
					,	A.REG_USR_ID
					,	A.REG_USR_IP
					,	TO_CHAR(A.MODIFY_DTM, 'YYYY-MM-DD HH24:MI:SS') AS MODIFY_DTM
					,	A.MODIFY_USR_ID
					,	A.MODIFY_USR_IP
			    FROM 
			    (
			    	SELECT * 
			    	FROM REQ4100 
			    	WHERE 1=1
			    	AND PRJ_ID = COALESCE(  #prjId# , #selPrjId# )
			    ) A
			    LEFT JOIN FLW1000 B
				ON ( A.PRJ_ID = B.PRJ_ID AND A.PROCESS_ID = B.PROCESS_ID )
				LEFT JOIN FLW1100 C
				ON ( B.PRJ_ID = C.PRJ_ID AND B.PROCESS_ID = C.PROCESS_ID AND A.FLOW_ID = C.FLOW_ID )
				LEFT JOIN ADM2000 D
				ON ( A.REQ_CHARGER_ID = D.USR_ID )
				WHERE 1=1
				AND		A.PROCESS_ID IS NOT NULL /* 신규요청사항 요청이 아닌건만 */
				AND		A.PRJ_ID = #prjId#
			) T1
			WHERE 1=1
			<isNotEmpty property="clsMode">
				<isEqual property="clsMode" compareValue="clsAdd">
					AND	T1.REQ_CLS_ID = #reqClsId#
				</isEqual>
				<isEqual property="clsMode" compareValue="clsDel">
					AND	(T1.REQ_CLS_ID IS NULL OR  T1.REQ_CLS_ID = '')
				</isEqual>
			</isNotEmpty>
			<!-- 검색정보 세팅 -->
			<isNotEmpty property="searchSelect">
				<isNotEmpty property="searchTxt">
					<isEqual property="searchSelect" compareValue="reqNm"> 
						AND		UPPER( T1.REQ_NM ) like '%'|| UPPER( #searchTxt# )  ||'%'	/* 요구사항 명 검색 */
					</isEqual>
					<isEqual property="searchSelect" compareValue="reqDesc"> 
						AND		UPPER( T1.REQ_DESC )  like '%'|| UPPER( #searchTxt# )  ||'%'	/* 요구사항 내용 검색 */
					</isEqual>
					<isEqual property="searchSelect" compareValue="reqUsrNm"> 
						AND		UPPER( T1.REQ_USR_NM )  like '%'|| UPPER( #searchTxt# )  ||'%'	/* 요청자 명 검색 */
					</isEqual>
					<isEqual property="searchSelect" compareValue="reqChargerNm"> 
						AND		UPPER( T1.REQ_CHARGER_NM )  like '%'|| UPPER( #searchTxt# )  ||'%'	/* 담당자 명 검색 */
					</isEqual>
					<isEqual property="searchSelect" compareValue="processNm"> 
						AND		UPPER( T1.PROCESS_NM )  like '%'|| UPPER( #searchTxt# )  ||'%'	/* 프로세스 명 검색 */
					</isEqual>
					<isEqual property="searchSelect" compareValue="flowNm"> 
						AND		UPPER( T1.FLOW_NM )  like '%'|| UPPER( #searchTxt# )  ||'%'	/* 작업흐름 명 검색 */
					</isEqual>
					<isEqual property="searchSelect" compareValue="reqNo"> 
						AND		UPPER( T1.REQ_NO )  like '%'|| UPPER( #searchTxt# )  ||'%'	/* 공문번호 검색 */
					</isEqual>
					<isEqual property="searchSelect" compareValue="reqOrd"> 
						AND		UPPER( T1.REQ_ORD )  like '%'|| UPPER( #searchTxt# )  ||'%'	/* 요구사항 순번 검색 */
					</isEqual>
				</isNotEmpty>
			</isNotEmpty>
			<isNotEmpty property="searchSelect">
				<isNotEmpty property="searchCd">
					<isEqual property="searchSelect" compareValue="reqProType">
						AND		T1.REQ_PRO_TYPE = #searchCd#	/* 처리유형 */
					</isEqual>
					<isEqual property="searchSelect" compareValue="reqNewType">
						AND		T1.REQ_NEW_TYPE = #searchCd#	/* 접수 유형 */
					</isEqual>
					<isEqual property="searchSelect" compareValue="reqTypeCd">
						AND		T1.REQ_TYPE_CD = #searchCd#	/* 요구사항 유형 */
					</isEqual>
				</isNotEmpty>
			</isNotEmpty>
		) T2
		ORDER BY T2.REQ_ORD_NUMBER DESC, T2.REQ_DTM DESC, T2.REG_DTM DESC
    </sql>

	<!-- 요구사항 분류 정보 목록 가져오기 -->
	<select id="req4200DAO.selectReq4200ReqClsList" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[ 
			/* req4200DAO.selectReq4200ReqClsList - 요구사항 분류 정보 목록 가져오기 */
			SELECT 	
					ROWNUM RN
				, 	T.*
		    FROM
		    	(
					SELECT	
							LPAD('ㄴ', LVL*4, ' ') || REQ_CLS_NM AS REQ_CLS_LVL
						,	PRJ_ID
						,	SF_PRJ1000_GRP_NM(A.PRJ_ID) AS PRJ_NM
						,	REQ_CLS_ID
						,	UPPER_REQ_CLS_ID
						,	REQ_CLS_NM
						,	LVL
						,	ORD
						,	USE_CD
						,	REG_DTM
						,	REG_USR_ID
						,	REG_USR_IP
						,	MODIFY_DTM
						,	MODIFY_USR_ID
						,	MODIFY_USR_IP
					FROM REQ4000 A 
					WHERE 1=1
					AND A.PRJ_ID = COALESCE(#selPrjId#, #prjId#)
					AND	A.USE_CD = '01'
			) T
	        WHERE 1=1
	        START WITH T.REQ_CLS_ID = (SELECT C.REQ_CLS_ID FROM REQ4000 C WHERE C.UPPER_REQ_CLS_ID IS NULL AND C.LVL = '0' AND C.PRJ_ID = #selPrjId#)
			CONNECT BY PRIOR T.REQ_CLS_ID = T.UPPER_REQ_CLS_ID
			ORDER SIBLINGS BY T.ORD ASC, T.REQ_CLS_NM ASC
 		]]> 
	</select>
	
	
	<!-- 요구사항 분류 배정 정보 목록 가져오기 -->
	<select id="req4200DAO.selectReq4200ReqClsAddListAjax" parameterClass="req4200VO" resultClass="egovMap">
		/* req4200DAO.selectReq4200ReqClsAddListAjax - 요구사항 분류 배정 정보 목록 가져오기 */
 		SELECT *
		FROM
			(
				<include refid="req4200DAO.selectReq4100List"/>
	    	) X
	    WHERE 1=1
	    AND RN BETWEEN (#firstIndex#+1) AND #lastIndex#
	</select>
	

	<!-- 분류에 배정된 요구사항 총 건수 :페이징 처리 부분 -->
    <select id="req4200DAO.selectReq4100ReqClsAddListCnt" parameterClass="req4200VO"  resultClass="java.lang.Integer">
	    /* req4200DAO.selectReq4100ReqClsAddListCnt 분류에 배정된 요구사항 총 건수를 조회한다. */
	    SELECT
			COUNT(*)
		FROM	(
			<include refid="req4200DAO.selectReq4100List"/>
		) X
    </select>
	

	<!-- 요구사항 분류 미배정 정보 목록 가져오기 -->
	<select id="req4200DAO.selectReq4200ReqClsDelListAjax" parameterClass="req4200VO" resultClass="egovMap">
		/* req4200DAO.selectReq4200ReqClsDelListAjax - 요구사항 분류 미배정 정보 목록 가져오기 */
		SELECT *
		FROM
			(
				<include refid="req4200DAO.selectReq4100List"/>
	    	) X
	    WHERE 1=1
	    AND RN BETWEEN (#firstIndex#+1) AND #lastIndex#
	</select>
	
	
	<!-- 분류에 미배정된 요구사항 총 건수 :페이징 처리 부분 -->
    <select id="req4200DAO.selectReq4100ReqClsDelListCnt" parameterClass="req4200VO"  resultClass="java.lang.Integer">
	    /* req4200DAO.selectReq4100ReqClsAddListCnt 분류에 미배정된 요구사항 총 건수를 조회한다. */
	    SELECT
			COUNT(*)
		FROM	(
			<include refid="req4200DAO.selectReq4100List"/>
		) X
    </select>
	
	<!-- 요구사항 분류에 요구사항 배정 및 삭제 처리 -->
	<update id="req4200DAO.updateReq4200ReqClsAddDelListAjax" parameterClass="java.util.Map">
		/* req4200DAO.updateReq4200ReqClsAddDelListAjax 요구사항 분류에 요구사항 배정,배정제외 한다. */
		UPDATE	REQ4100 A
		SET			A.REQ_CLS_ID 	= #reqClsId#
				,	MODIFY_DTM      = CURRENT_TIMESTAMP
	            ,	MODIFY_USR_ID   = #modifyUsrId#
	            ,	MODIFY_USR_IP   = #modifyUsrIp#
		WHERE	1=1
		AND		A.PRJ_ID = #prjId#
		AND		A.REQ_ID = #reqId#
	</update>

</sqlMap>