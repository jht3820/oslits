<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="adm7000DAO">

	<!--  in / out class define  -->
	<typeAlias  alias="egovMap" 	type="egovframework.rte.psl.dataaccess.util.EgovMap"/>

	
	<sql id="selectAdm7000DeptList">
		<![CDATA[ 
			SELECT 	
					ROWNUM RN
				, 	T.*
	    	FROM
	    		(
					SELECT	
							LPAD('ㄴ', LVL*4, ' ') || DEPT_NAME AS DEPT_LVL
						, 	LIC_GRP_ID
						,	DEPT_ID
						,	UPPER_DEPT_ID
						,	DEPT_NAME
						,	DEPT_ADMIN_USR_ID
						,	ORD
						,	USE_CD
						,	DEPT_ETC
						,	LVL
						,	TO_CHAR(REG_DTM, 'YYYY-MM-DD') AS REG_DTM
						,	REG_USR_ID
						,	REG_USR_IP
						,	TO_CHAR(MODIFY_DTM, 'YYYY-MM-DD') AS MODIFY_DTM
						,	MODIFY_USR_ID
						,	MODIFY_USR_IP
					FROM ADM7000 A 
					WHERE 1=1
					AND	A.LIC_GRP_ID = #licGrpId#
		    	) T
	    ]]> 	
	    	WHERE	1=1
	     <!-- 조직검색 공통팝업에서 조직목록 조회시 -->
	    <isNotEmpty property="viewType">
	   		<!-- 사용유무가 사용인 조직목록만 가져온다. -->
			<isEqual property="viewType" compareValue="popup" >
				AND T.USE_CD = '01' /* 사용유무가 사용인 조직목록만 조회*/
			</isEqual>
		</isNotEmpty>	
	   	<isNotEmpty property="searchTxt">
			AND T.DEPT_NAME LIKE '%'||#searchTxt#||'%'
		</isNotEmpty>	
		<![CDATA[
	        START WITH T.DEPT_ID = (SELECT C.DEPT_ID FROM ADM7000 C WHERE C.UPPER_DEPT_ID IS NULL AND C.LVL = '0' AND C.LIC_GRP_ID = #licGrpId#)
			CONNECT BY PRIOR T.DEPT_ID = T.UPPER_DEPT_ID
			ORDER SIBLINGS BY T.ORD ASC, T.REG_DTM ASC
		]]>
	</sql>

	<!--  조직 목록 가져오기(List) -->
    <select id="adm7000DAO.selectAdm7000DeptList" parameterClass="java.util.Map" resultClass="egovMap">
	    /* adm7000DAO.selectAdm7000DeptList -  조직 목록 가져오기(List) */
		SELECT *
		FROM
			(
				<include refid="selectAdm7000DeptList"/>
	    	)
    </select>
	
	<!-- 조직 정보 가져오기(단건)-->
	<select id="adm7000DAO.selectAdm7000DeptInfo" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[ 
			/* adm7000DAO.selectAdm7000DeptInfo - 조직 정보 가져오기(단건) */
			SELECT	
					LIC_GRP_ID
				,	DEPT_ID
			    ,	UPPER_DEPT_ID
			    ,	DEPT_NAME
			    ,	DEPT_ADMIN_USR_ID
			    ,	ORD
			    ,	USE_CD
			    ,	DEPT_ETC
			    ,	LVL
			    ,	TO_CHAR(REG_DTM, 'YYYY-MM-DD') AS REG_DTM
			    ,	REG_USR_ID
			    ,	REG_USR_IP
			    ,	TO_CHAR(MODIFY_DTM, 'YYYY-MM-DD') AS MODIFY_DTM
			    ,	MODIFY_USR_ID
			    ,	MODIFY_USR_IP
			FROM ADM7000 A 
			WHERE 1=1
			AND	A.LIC_GRP_ID = #licGrpId#
			AND	A.DEPT_ID = #deptId#
 		]]> 
	</select>
	
	<!-- 조직 루트디렉토리 생성-->
	<insert id="adm7000DAO.insertAdm7000RootDeptInfo" parameterClass="java.util.Map">
		<selectKey resultClass="java.lang.String" keyProperty="newDeptId">
		<![CDATA[
			/* adm7000DAO.insertAdm7000RootMenu - 신규 조직 등록(ROOT DEPT_ID 따기)*/ 
			SELECT	COALESCE( 
							SUBSTR(NEW_DEPT_ID, 1, 11) || LPAD( (TO_NUMBER(SUBSTR(NEW_DEPT_ID, 12, 5)) + 1) , 5, '0')
						,	'DPT' || TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMMDD') || '00001'
            		) AS NEW_DPT_ID 
			FROM	(
			            SELECT	MAX(DEPT_ID)  AS NEW_DEPT_ID
			            FROM	ADM7000 A
			            WHERE	1=1
                        AND		A.LIC_GRP_ID = #licGrpId#
			            AND		A.DEPT_ID LIKE 'DPT' || TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMMDD') || '%'
					)
		]]>
		</selectKey>
		<![CDATA[ 
			/* adm7000DAO.insertAdm7000RootMenu - 조직 루트디렉토리 생성  */
			INSERT INTO ADM7000
			(
					LIC_GRP_ID			,	DEPT_ID  			,	UPPER_DEPT_ID  		,	DEPT_NAME
			  	,	DEPT_ADMIN_USR_ID	,	ORD					,	USE_CD		 		,	DEPT_ETC
			  	,	LVL				  	,	REG_DTM	  			,	REG_USR_ID 			,	REG_USR_IP
			  	,	MODIFY_DTM		  	,	MODIFY_USR_ID		,	MODIFY_USR_IP
			)
			VALUES
			(
					#licGrpId#			,	#newDeptId#			,	null		,	#deptName#   
			    ,	#deptAdminUsrId#	,	0					,	'01'		,	'최상위 조직'		
			    ,	0	    			,	CURRENT_TIMESTAMP	,	#regUsrId#	,	#regUsrIp#
			    ,	CURRENT_TIMESTAMP	,	#regUsrId#			,	#regUsrIp#
			)
		]]>
	</insert>
	
	
	<!-- 신규 조직 등록 -->
	<insert id="adm7000DAO.insertAdm7000DeptInfo" parameterClass="java.util.Map">
		<selectKey resultClass="java.lang.String" keyProperty="newDeptId">
		<![CDATA[
			/* adm7000DAO.insertAdm7000RootMenu - 신규 조직 등록(새로운 DEPT_ID 따기)*/ 
			SELECT	COALESCE( 
							SUBSTR(NEW_DEPT_ID, 1, 11) || LPAD( (TO_NUMBER(SUBSTR(NEW_DEPT_ID, 12, 5)) + 1) , 5, '0')
						,	'DPT' || TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMMDD') || '00001'
            		) AS NEW_DEPT_ID 
			FROM	(
			            SELECT	MAX(DEPT_ID)  AS NEW_DEPT_ID
			            FROM	ADM7000 A
			            WHERE	1=1
                        AND		A.LIC_GRP_ID = #licGrpId#
			            AND		A.DEPT_ID LIKE 'DPT' || TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMMDD') || '%'
					)
		]]>
		</selectKey>
		<![CDATA[ 
			/* adm7000DAO.insertAdm7000DeptInfo - 신규 조직 등록  */
			INSERT INTO ADM7000
			(
					LIC_GRP_ID			,	DEPT_ID  			,	UPPER_DEPT_ID  		,	DEPT_NAME
			  	,	DEPT_ADMIN_USR_ID	,	ORD					,	USE_CD		 		
			  	,	DEPT_ETC
			  	,	LVL				  	,	REG_DTM	  			,	REG_USR_ID 			,	REG_USR_IP
			  	,	MODIFY_DTM		  	,	MODIFY_USR_ID		,	MODIFY_USR_IP
			)
			VALUES
			(
					#licGrpId#			,	#newDeptId#		,	#upperDeptId#		,	#deptName#   
			    ,	#deptAdminUsrId#	,	#ord#			,	'01'	
		]]>			
			    <isEmpty property="deptEtc">
			   		, NULL
			    </isEmpty>
			    <isNotEmpty property="deptEtc">
			     	, #deptEtc#
			    </isNotEmpty>
		<![CDATA[ 	    		
			    ,	#lvl# + 1	    	,	CURRENT_TIMESTAMP			,	#regUsrId#			,	#regUsrIp#
			    ,	CURRENT_TIMESTAMP	,	#modifyUsrId#				,	#modifyUsrIp#
			)
		]]>
	</insert>
	
	
	<!-- 선택한 조직 정보 수정(단건) -->
	<update id="adm7000DAO.updateAdm7000DpteInfo" parameterClass="java.util.Map">
	<![CDATA[
		/* adm7000DAO.updateAdm7000DpteInfo - 선택한 조직 정보 수정 */
		UPDATE ADM7000 A SET		
				A.UPPER_DEPT_ID		= #upperDeptId#
        	,	A.DEPT_NAME			= #deptName#
    ]]>
        	<isEmpty property="deptEtc">
		   		,	A.DEPT_ETC		= NULL
		    </isEmpty>
		    <isNotEmpty property="deptEtc">
		     	,	A.DEPT_ETC		= #deptEtc#
		    </isNotEmpty>
   <![CDATA[     	
            ,	A.LVL				= #lvl#
            ,	A.ORD				= #ord#
            ,	A.USE_CD			= #useCd#
            ,	A.MODIFY_DTM		= CURRENT_TIMESTAMP
            ,	A.MODIFY_USR_ID		= #modifyUsrId#
            ,	A.MODIFY_USR_IP		= #modifyUsrIp#
        WHERE 1=1
        AND	A.LIC_GRP_ID = #licGrpId#
        AND	A.DEPT_ID = #deptId#
	]]>
	</update>
	
	
	<!-- 선택한 조직 정보 삭제 -->
	<delete id="adm7000DAO.deleteAdm7000DeptInfo" parameterClass="java.util.Map">
	<![CDATA[
		/* adm7000DAO.deleteAdm7000DeptInfo - 선택한 조직 정보 삭제 */
        DELETE FROM ADM7000 A
		WHERE 1=1
		AND	A.LIC_GRP_ID 	= #licGrpId#
		AND	A.DEPT_ID IN ($deptId$)
	]]>
	</delete>
	
	
	<!-- 해당 조직의 상위 조직을 찾음, 사용자에서 사용 -->
	<select id="adm7000DAO.selectAdm7000UpperDeptList" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[ 
			/* adm7000DAO.selectAdm7000UpperDeptList - 선택한 조직의 상위 조직명 가져오기(사용자에서 사용) */
			SELECT	A.DEPT_NAME
			FROM	ADM7000 A 
			WHERE	1=1
			AND 	A.LIC_GRP_ID 	= #licGrpId#
			START WITH DEPT_ID = #deptId#
			CONNECT BY PRIOR UPPER_DEPT_ID = DEPT_ID
 		]]> 
	</select>
	
	
	<!-- 해당 조직ID가 있는지 체크 -->
	<select id="adm7000DAO.selectAdm7000ExistDeptChk" parameterClass="java.util.Map" resultClass="int">
		/* adm2000DAO.selectAdm7000ExistDeptChk 해당 조직ID가 있는지 체크 */
		<![CDATA[ 
			SELECT	COUNT(*) AS CNT
			FROM	ADM7000 A
			WHERE	1=1
			AND		A.LIC_GRP_ID 	= #licGrpId#
			AND		A.DEPT_ID 		= #deptId#
 		]]> 
	</select>
	
</sqlMap>
