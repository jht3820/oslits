<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="prj3000DAO">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>

	<!-- 라이선스 그룹, 프로젝트에 할당된 기본 산출물 메뉴정보 목록 가져오기 -->
	<select id="prj3000DAO.selectPrj3000BaseMenuList" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[ 
			/* prj3000DAO.selectPrj3000BaseMenuList - 라이선스 그룹, 프로젝트에 할당된 기본 산출물 메뉴정보 목록 가져오기 */	
			SELECT Y.*
			FROM 
			(
			 		SELECT  Z.*
			 			   , SF_PRJ3000_DOC_NM(Z.LIC_GRP_ID, Z.PRJ_ID, Z.DOC_ID, '2') AS UP_DOC_NM
			 			   , SF_PRJ3000_DOC_NM(Z.LIC_GRP_ID, Z.PRJ_ID, Z.DOC_ID, '3') AS UPUP_DOC_NM
			 			   , ( SELECT SUB_CD_NM FROM ADM4100 WHERE LIC_GRP_ID = #licGrpId# AND MST_CD = 'CMM00001' AND SUB_CD = Z.USE_CD ) AS USE_NM
			 		FROM (
		      				SELECT	
									LPAD('ㄴ', LVL*4, ' ') || A.DOC_NM AS DOC_LVL
								,	A.DOC_NM
							    ,	B.LIC_GRP_ID
							    ,	A.PRJ_ID
							    ,	A.DOC_ID
							    ,	A.UPPER_DOC_ID
							    ,	(
							    		SELECT	Z.UPPER_DOC_ID 
							    		FROM PRJ3000 Z 
							    		INNER JOIN (SELECT PRJ_ID,LIC_GRP_ID FROM PRJ1000) C 
							    		ON(Z.PRJ_ID = C.PRJ_ID) 
							    		WHERE 1=1
							    		AND C.LIC_GRP_ID = B.LIC_GRP_ID 
							    		AND Z.DOC_ID = A.UPPER_DOC_ID 
							    		AND Z.PRJ_ID = A.PRJ_ID
							    		) AS TWO_UPPER_DOC_ID
				          		,	A.LVL
							    ,	A.ORD
							    ,	A.DOC_DESC
				          		,	A.DOC_FORM_FILE_ID
				          		,	A.DOC_FORM_FILE_SN
				          		,	A.DOC_ATCH_FILE_ID
								,	A.DOC_FILE_SN
								,	A.DOC_CONF_DESC
								,	TO_CHAR(A.DOC_ED_DTM, 'YYYY-MM-DD') AS DOC_ED_DTM
				          		,	A.USE_CD
							    ,	'' AS ROW_STATUS
				            FROM PRJ3000 A 
				            INNER JOIN PRJ1000 B 
				            ON ( A.PRJ_ID = B.PRJ_ID )
				            WHERE 1=1
				            AND	A.PRJ_ID		=	#prjId#
				            AND	B.LIC_GRP_ID 	= 	#licGrpId#
			 		) Z   
			) Y     
      		START WITH Y.DOC_ID = (
      								SELECT DOC_ID 
      								FROM PRJ3000 
      								WHERE 1=1
      								AND (UPPER_DOC_ID IS NULL OR UPPER_DOC_ID = '')
      								AND LVL = '0'
      								AND PRJ_ID	= #prjId#
      							  )
		  	CONNECT BY PRIOR Y.DOC_ID = Y.UPPER_DOC_ID
      		ORDER SIBLINGS BY Y.ORD ASC  
 		]]> 
	</select> 

	<!-- 라이선스 그룹에 할당된 기본 산출물 메뉴정보 가져오기(단건)-->
	<select id="prj3000DAO.selectPrj3000MenuInfo" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[ 
			/* prj3000DAO.selectPrj3000MenuInfo - 라이선스 그룹에 할당된 기본 산출물 메뉴정보 가져오기(단건) */
			SELECT 
					Z.*
			      ,	SF_PRJ3000_DOC_NM(Z.LIC_GRP_ID, Z.PRJ_ID, Z.DOC_ID, '2') AS UP_DOC_NM
			      ,	SF_PRJ3000_DOC_NM(Z.LIC_GRP_ID, Z.PRJ_ID, Z.DOC_ID, '3') AS UPUP_DOC_NM
			      , ( SELECT SUB_CD_NM FROM ADM4100 WHERE LIC_GRP_ID = #licGrpId# AND MST_CD = 'CMM00001' AND SUB_CD = Z.USE_CD ) AS USE_NM
			FROM(
					SELECT	
							B.LIC_GRP_ID
						,	A.DOC_ID
						,	A.PRJ_ID
						,	A.UPPER_DOC_ID
					    ,	(SELECT	UPPER_DOC_ID FROM PRJ3000 Z JOIN (SELECT PRJ_ID,LIC_GRP_ID FROM PRJ1000) C ON(Z.PRJ_ID = C.PRJ_ID) WHERE C.LIC_GRP_ID = B.LIC_GRP_ID AND Z.DOC_ID = A.UPPER_DOC_ID AND Z.PRJ_ID = A.PRJ_ID) AS TWO_UPPER_DOC_ID
		                ,	A.DOC_NM
						,	A.LVL
					    ,	A.ORD
					    ,	A.DOC_DESC
		                ,	A.DOC_FORM_FILE_ID
		                ,	A.DOC_FORM_FILE_SN
		                ,	A.DOC_ATCH_FILE_ID
		                ,	A.DOC_FILE_SN
		                ,	A.DOC_CONF_DESC
		                ,	TO_CHAR(A.DOC_ED_DTM, 'YYYY-MM-DD') AS DOC_ED_DTM
		                ,	A.USE_CD
						,	A.REG_DTM
						,	A.REG_USR_ID
						,	A.REG_USR_IP
						,	A.MODIFY_DTM
						,	A.MODIFY_USR_ID
						,	A.MODIFY_USR_IP
		            FROM PRJ3000 A
				    INNER JOIN (SELECT PRJ_ID,LIC_GRP_ID FROM PRJ1000) B
		            ON ( A.PRJ_ID = B.PRJ_ID )
		            WHERE 1=1
		            AND	B.LIC_GRP_ID 	= #licGrpId#
		            AND	A.DOC_ID 		= #docId#
		            AND	A.PRJ_ID		= #prjId#
            ) Z
            ORDER BY Z.ORD 
 		]]> 
	</select>

	 
	<!-- 개발문서 상위메뉴 정보를 이용하여 개발문서 하위메뉴 기본정보 등록 -->
	<insert id="prj3000DAO.insertPrj3000MenuInfo" parameterClass="java.util.Map">
		<selectKey resultClass="java.lang.String" keyProperty="newDocId">
		<![CDATA[
			/* prj3000DAO.insertPrj3000MenuInfo - 상위메뉴에 속한 하위메뉴 DOC_ID 발급 */ 
			SELECT	IFNULL( 
							SUBSTR(NEW_DOC_ID, 1, 11) || LPAD( (TO_NUMBER(SUBSTR(NEW_DOC_ID, 12, 5)) + 1) , 5, '0')
						,	'DOC' || TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMMDD') || '00001'
            		) AS NEW_DPT_ID 
			FROM	(
			            SELECT	MAX(DOC_ID)  AS NEW_DOC_ID
			            FROM	PRJ3000 A
			            WHERE	1=1
			            AND		A.DOC_ID LIKE 'DOC' || TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMMDD') || '%'
					)
		]]>
		</selectKey>
		<![CDATA[ 
			/* prj3000DAO.insertPrj3000MenuInfo - 개발문서  상위메뉴 정보를 이용하여 하위메뉴 기본정보 등록  */
			INSERT INTO PRJ3000
			(
					DOC_ID				,	UPPER_DOC_ID  		,	DOC_NM  			,	DOC_FORM_FILE_ID	
				,	DOC_FORM_FILE_SN	,	DOC_DESC	 		,	DOC_ATCH_FILE_ID  	,	DOC_FILE_SN
			  	,	DOC_CONF_DESC		,	LVL				  	,	ORD		  			,	DOC_ED_DTM			
			  	,	USE_CD  			,	REG_DTM  			,	REG_USR_ID			,	REG_USR_IP		  	
			  	,	MODIFY_DTM			,	MODIFY_USR_ID		,	MODIFY_USR_IP		,	PRJ_ID
			)
			VALUES
			(
					#newDocId#		,	#docId#			,	'개발문서'			,	#docFormFileId#	
				,	#docFormFileSn#	
				,	NULL			
				,	#docAtchFileId#	,	#docFileSn#
			    ,	NULL			,	#lvl# + 1	    ,	(SELECT COALESCE(MAX(ORD), 0) + 1 FROM PRJ3000 A WHERE 1=1 AND A.UPPER_DOC_ID = #docId#)				
				,	TO_DATE(REPLACE(#docEdDtm#, '-', CHR(10)), 'YYYYMMDD')		
			    ,	'01'			
			    ,	CURRENT_TIMESTAMP			,	#regUsrId#		,	#regUsrIp#	    ,	CURRENT_TIMESTAMP			
			    ,	#regUsrId#		,	#regUsrIp#		,	#prjId#
			)
		]]>
	</insert>
	
	<!-- 산출물 메뉴 루트디렉토리 생성-->
	<insert id="prj3000DAO.insertPrj3000RootMenuInfo" parameterClass="java.util.Map">
	<selectKey resultClass="java.lang.String" keyProperty="newDocId">
		<![CDATA[
			/* prj3000DAO.insertPrj3000MenuInfo - 상위메뉴에 속한 하위메뉴 DOC_ID 발급 */ 
			SELECT	IFNULL( 
							SUBSTR(NEW_DOC_ID, 1, 11) || LPAD( (TO_NUMBER(SUBSTR(NEW_DOC_ID, 12, 5)) + 1) , 5, '0')
						,	'DOC' || TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMMDD') || '00001'
            		) AS NEW_DPT_ID 
			FROM	(
			            SELECT	MAX(DOC_ID)  AS NEW_DOC_ID
			            FROM	PRJ3000 A
			            WHERE	1=1
			            AND		A.DOC_ID LIKE 'DOC' || TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMMDD') || '%'
					)
		]]>
		</selectKey>
		<![CDATA[ 
			/* prj3000DAO.insertPrj3000RootMenuInfo - 산출물 메뉴 루트디렉토리 생성  */
			INSERT INTO PRJ3000
			(
					DOC_ID				,	UPPER_DOC_ID  		,	DOC_NM  			,	DOC_FORM_FILE_ID	
				,	DOC_FORM_FILE_SN	,	DOC_DESC	 		,	DOC_ATCH_FILE_ID  	,	DOC_FILE_SN
			  	,	LVL				  	,	ORD		  			,	DOC_ED_DTM			,	USE_CD  			
			  	,	REG_DTM  			,	REG_USR_ID			,	REG_USR_IP		  	,	MODIFY_DTM			
			  	,	MODIFY_USR_ID		,	MODIFY_USR_IP		,	PRJ_ID
			)
			VALUES
			(
					#newDocId#		,	null			,	#docNm#		,	null			
				,	0				,	'시스템 ROOT'		,	null		,	0
			    ,	0	    		,	1				,	null		,	'01'			
			    ,	CURRENT_TIMESTAMP			,	#regUsrId#		,	#regUsrIp#	,	CURRENT_TIMESTAMP			
			    ,	#regUsrId#		,	#regUsrIp#		,	#prjId#
			)
		]]>
	</insert>
	
	<!-- 선택한 산출물 메뉴 삭제 -->
	<delete id="prj3000DAO.deletePrj3000MenuInfo" parameterClass="java.util.Map">
	<![CDATA[
		/* prj3000DAO.deletePrj3000MenuInfo - 선택한 산출물 메뉴 삭제 */
		DELETE
		FROM	PRJ3000 A
		WHERE	1=1
		AND		(SELECT LIC_GRP_ID FROM PRJ1000 WHERE PRJ_ID=#prjId#) =  #licGrpId#
		AND		A.PRJ_ID	=	#prjId#
		AND		A.DOC_ID	= 	#docId#
	]]>
	</delete>
	
	
	<!-- 선택한 산출물 메뉴 수정 -->
	<update id="prj3000DAO.updatePrj3000MenuInfo" parameterClass="java.util.Map">
	<![CDATA[
		/* prj3000DAO.updatePrj3000MenuInfo - 선택한 산출물 메뉴 수정 */
		UPDATE	PRJ3000 A
        SET		DOC_FORM_FILE_SN	= #docFormFileSn#
            ,	DOC_FILE_SN			= #docFileSn#
            ,	MODIFY_DTM      	= CURRENT_TIMESTAMP
            ,	MODIFY_USR_ID   	= #modifyUsrId#
            ,	MODIFY_USR_IP   	= #modifyUsrIp#
     ]]>     
    <isEmpty property="docEdDtm">
            ,	DOC_ED_DTM			= NULL
     </isEmpty>
     <isNotEmpty property="docEdDtm">
     		,	DOC_ED_DTM			= TO_DATE(REPLACE(#docEdDtm#, '-',CHR(10)), 'YYYYMMDD')
     </isNotEmpty>      
     <![CDATA[      
            ,	USE_CD				= #useCd#
            , 	DOC_NM				= #docNm#
            ,	DOC_DESC			= #docDesc#
            ,	DOC_CONF_DESC		= #docConfDesc#
            , 	ORD					= #ord#
        WHERE	1=1
        AND		(SELECT LIC_GRP_ID FROM PRJ1000 WHERE PRJ_ID=#prjId#) =  #licGrpId#
        AND		A.DOC_ID		= 	#docId#
        AND		A.PRJ_ID		=	#prjId#
	  ]]> 
	</update>
	
	<!-- 선택한 양식 산출물 확정 처리  -->
	<update id="prj3000DAO.updatePrj3000FileSnSelect" parameterClass="java.util.Map">
	<![CDATA[
		/* prj3000DAO.updatePrj3000FileSnSelect -  선택한 산출물 양식 확정 처리 */
		UPDATE	PRJ3000 A
        SET		DOC_FORM_FILE_SN	= #docFileSn#
        	,	MODIFY_DTM      	= CURRENT_TIMESTAMP
            ,	MODIFY_USR_ID   	= #modifyUsrId#
            ,	MODIFY_USR_IP   	= #modifyUsrIp#
        WHERE	1=1
        AND		(SELECT LIC_GRP_ID FROM PRJ1000 WHERE PRJ_ID=#prjId#) =  #licGrpId#
        AND		A.DOC_ID		= #docId#
        AND		A.PRJ_ID		= #prjId#
	]]>
	</update>
	
	<!--  프로젝트에 할당된 선택 하위 메뉴 불러오기(첨부파일 압축 다운로드 사용)-->
	<select id="prj3000DAO.selectPrj3000MenuTree" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[ 
			/* prj3000DAO.selectPrj3000MenuTree - 프로젝트에 할당된 선택 하위 메뉴 불러오기(첨부파일 압축 다운로드 사용) */
			SELECT	LPAD('ㄴ', LVL*4, ' ') || A.DOC_NM AS DOC_LVL
				,	A.DOC_NM
			    ,	A.PRJ_ID
			    ,	A.DOC_ID
			    ,	A.UPPER_DOC_ID
                ,	A.LVL
			    ,	A.ORD
			    ,	A.DOC_DESC
                ,	A.DOC_FORM_FILE_ID
                ,	A.DOC_FORM_FILE_SN
                ,	A.DOC_ATCH_FILE_ID
                ,	A.DOC_FILE_SN
                ,	TO_CHAR(A.DOC_ED_DTM, 'YYYY-MM-DD') AS DOC_ED_DTM
                ,	A.USE_CD
			FROM	(SELECT * FROM PRJ3000 WHERE PRJ_ID = #prjId# AND USE_CD = '01') A
			WHERE	1=1
			START WITH A.DOC_ID = #docId#
			CONNECT BY PRIOR	A.DOC_ID = A.UPPER_DOC_ID
			AND		A.USE_CD = '01'
            ORDER BY A.ORD ASC
 		]]> 
	</select>
	
	<!-- ROOTSYSTEM_PRJ 산출물 메뉴 정보 가져오기-->
	<select id="prj3000DAO.selectPrj3000RootMenuList" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[ 
			/* prj3000DAO.selectPrj3000RootMenuList - ROOTSYSTEM_PRJ 산출물 메뉴 정보 가져오기 */
			SELECT 
					T.* 
			FROM(
      				SELECT	
							LPAD('ㄴ', LVL*4, ' ') || A.DOC_NM AS DOC_LVL
						,	A.DOC_NM
					    ,	A.PRJ_ID
					    ,	A.DOC_ID
					    ,	A.UPPER_DOC_ID
		          		,	A.LVL
					    ,	A.ORD
					    ,	A.DOC_DESC
		          		,	A.DOC_FORM_FILE_ID
		          		,	A.DOC_FORM_FILE_SN
		          		,	A.DOC_ATCH_FILE_ID
						,	A.DOC_FILE_SN
						,	A.DOC_CONF_DESC
						,	TO_CHAR(A.DOC_ED_DTM, 'YYYY-MM-DD') AS DOC_ED_DTM
		          		,	A.USE_CD
					    ,	'' AS ROW_STATUS
		            FROM 	PRJ3000 A 
		            WHERE	1=1
		            AND		A.PRJ_ID = 'ROOTSYSTEM_PRJ'
		    ) T        
      		START WITH T.DOC_ID = (
	      							SELECT DOC_ID 
	      							FROM PRJ3000 
	      							WHERE 1=1
	      							AND (UPPER_DOC_ID IS NULL OR UPPER_DOC_ID = '')
	      							AND LVL = '0'
	      							AND PRJ_ID	= 'ROOTSYSTEM_PRJ'
      							)
		  	CONNECT BY PRIOR T.DOC_ID = T.UPPER_DOC_ID
      		ORDER SIBLINGS BY T.ORD ASC 
 		]]> 
	</select>
	
	
	<!-- [프로젝트 마법사] 단순 산출물 정보 가져오기-->
	<select id="prj3000DAO.selectPrj3000WizardMenuInfo" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[ 
			/* prj3000DAO.selectPrj3000WizardMenuInfo - [프로젝트 마법사] 단순 산출물 정보 가져오기 */
			SELECT	A.DOC_ID
				,	A.PRJ_ID
				,	A.UPPER_DOC_ID
                ,	A.DOC_NM
				,	A.LVL
			    ,	A.ORD
			    ,	A.DOC_DESC
                ,	A.DOC_FORM_FILE_ID
                ,	A.DOC_FORM_FILE_SN
                ,	A.DOC_ATCH_FILE_ID
                ,	A.DOC_FILE_SN
                ,	A.DOC_CONF_DESC
                ,	TO_CHAR(A.DOC_ED_DTM, 'YYYY-MM-DD') AS DOC_ED_DTM
                ,	A.USE_CD
				,	A.REG_DTM
				,	A.REG_USR_ID
				,	A.REG_USR_IP
				,	A.MODIFY_DTM
				,	A.MODIFY_USR_ID
				,	A.MODIFY_USR_IP
            FROM	PRJ3000 A
            WHERE	1=1
            AND		A.PRJ_ID		= #prjId#
            AND		A.DOC_ID 		= #docId#
            ORDER BY ORD
 		]]> 
	</select>
	
	<!-- [프로젝트 마법사] 개발문서 양식 생성(전체 정보 입력값)-->
	<insert id="prj3000DAO.insertPrj3000ParamMenuInfo" parameterClass="java.util.Map">
		<![CDATA[ 
			/* prj3000DAO.insertPrj3000ParamMenuInfo - [프로젝트 마법사] 개발문서 양식 생성(전체 정보 입력값)  */
			INSERT INTO PRJ3000
			(
					DOC_ID				
				,	UPPER_DOC_ID  		
				,	DOC_NM  			,	DOC_FORM_FILE_ID	
				,	DOC_FORM_FILE_SN	
				,	DOC_DESC	 		
				,	DOC_ATCH_FILE_ID  	,	DOC_FILE_SN
			  	,	DOC_CONF_DESC		,	LVL				  	,	ORD		  			
			  	,	DOC_ED_DTM			
			  	,	USE_CD  			,	REG_DTM  			,	REG_USR_ID			,	REG_USR_IP		  	
			  	,	MODIFY_DTM			,	MODIFY_USR_ID		,	MODIFY_USR_IP		,	PRJ_ID
			)
		]]>
			VALUES
			(
					#docId#
				,	#upperDocId#
				,	#docNm#				,	#docFormFileId#	
				,	null	
				,	#docDesc#
				,	#docAtchFileId#		,	null
			    ,	#docConfDesc#		,	#lvl#	   			,	#ord#	
			    ,	#docEdDtm#
			    ,	'01'			    ,	CURRENT_TIMESTAMP	,	#regUsrId#		,	#regUsrIp#	    
			    ,	CURRENT_TIMESTAMP	,	#regUsrId#		  	,	 #regUsrIp#		,	#prjId#
			)
	
	</insert>
</sqlMap>